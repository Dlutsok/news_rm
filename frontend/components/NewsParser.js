import { useState, useEffect } from 'react'
import { FaPlay } from 'react-icons/fa'
import {
  LoadingIcon,
  CalendarIcon,
  NewsIcon,
  ExternalIcon,
  FilterIcon,
  ClockIcon,
  ViewIcon,
  InfoIcon,
  GlobalIcon
} from './ui/icons'
import ArticleModal from './ArticleModal'

const NewsParser = ({ selectedPlatform }) => {
  const [news, setNews] = useState([])
  const [loading, setLoading] = useState(false)
  const [maxArticles, setMaxArticles] = useState(20)
  const [dateFilter, setDateFilter] = useState('')
  const [fastMode, setFastMode] = useState(false)
  const [combineResults, setCombineResults] = useState(true)
  const [selectedSources, setSelectedSources] = useState(['ria', 'medvestnik', 'aig', 'remedium', 'rbc_medical']) // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const [lastParsed, setLastParsed] = useState(null)
  const [selectedArticle, setSelectedArticle] = useState(null)
  const [isModalOpen, setIsModalOpen] = useState(false)

  // –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
  const availableSources = [
    { value: 'ria', label: '–†–ò–ê –ù–æ–≤–æ—Å—Ç–∏', description: '–§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ' },
    { value: 'medvestnik', label: '–ú–µ–¥–≤–µ—Å—Ç–Ω–∏–∫', description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è' },
    { value: 'aig', label: 'AIG Journal', description: '–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ, –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è –∏ —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–ª–æ–≥–∏—è' },
    { value: 'remedium', label: 'Remedium.ru', description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ø–æ—Ä—Ç–∞–ª –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤' },
    { value: 'rbc_medical', label: '–†–ë–ö –ú–µ–¥–∏—Ü–∏–Ω–∞', description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –†–ë–ö' }
  ]

  const parseNewsToDatabase = async () => {
    setLoading(true)
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π API —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
      const requestBody = {
        sources: selectedSources,
        max_articles: maxArticles,
        fetch_full_content: !fastMode,
        date_filter: dateFilter || undefined
      }
      
      const controller = new AbortController()
      const timeoutId = setTimeout(() => controller.abort(), 300000) // 5 –º–∏–Ω—É—Ç
      
      const response = await fetch('/api/news/parse-to-db', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody),
        signal: controller.signal
      })
      
      clearTimeout(timeoutId)
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }
      
      const data = await response.json()
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
      const resultSummary = []
      if (data.summary) {
        resultSummary.push(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${data.summary.total_saved}`)
        resultSummary.push(`üîÑ –î—É–±–ª–∏: ${data.summary.total_duplicates}`)
        if (data.summary.total_errors > 0) {
          resultSummary.push(`‚ùå –û—à–∏–±–∫–∏: ${data.summary.total_errors}`)
        }
      }
      
      setNews([{
        title: `–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω: ${data.status}`,
        content: `–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ PostgreSQL:\n\n${resultSummary.join('\n')}\n\n–ò—Å—Ç–æ—á–Ω–∏–∫–∏:\n${Object.entries(data.sources || {}).map(([source, stats]) => 
          `‚Ä¢ ${source.toUpperCase()}: —Å–ø–∞—Ä—Å–µ–Ω–æ ${stats.parsed}, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${stats.saved}, –¥—É–±–ª–∏ ${stats.duplicates}`
        ).join('\n')}`,
        url: '#',
        source_site: 'database',
        published_date: new Date().toISOString()
      }])
      
      setLastParsed(new Date())
    } catch (error) {
      console.error('Error parsing to database:', error)
      setNews([{
        title: '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ –ë–î',
        content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: ${error.message}`,
        url: '#',
        source_site: 'error',
        published_date: new Date().toISOString()
      }])
    } finally {
      setLoading(false)
    }
  }

  const parseNews = async () => {
    setLoading(true)
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
      const requestBody = {
        sources: selectedSources, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        max_articles: maxArticles,
        fetch_full_content: !fastMode,
        combine_results: combineResults,
        date_filter: dateFilter || undefined
      }
      
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ç–∞–π–º–∞—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–∞—Ç–µ–π
      let timeoutMs = 300000 // 5 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      if (maxArticles > 100) {
        timeoutMs = 900000 // 15 –º–∏–Ω—É—Ç –¥–ª—è –±–æ–ª—å—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      } else if (maxArticles > 50) {
        timeoutMs = 600000 // 10 –º–∏–Ω—É—Ç –¥–ª—è —Å—Ä–µ–¥–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      }
      
      console.log(`–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ ${maxArticles} —Å—Ç–∞—Ç–µ–π —Å —Ç–∞–π–º–∞—É—Ç–æ–º ${timeoutMs/60000} –º–∏–Ω—É—Ç`)
      
      const controller = new AbortController()
      const timeoutId = setTimeout(() => controller.abort(), timeoutMs)
      
      const response = await fetch('/api/news/parse', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody),
        signal: controller.signal
      })
      
      clearTimeout(timeoutId)
      
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`)
      }
      
      const data = await response.json()
      
      if (combineResults) {
        // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        setNews(data.articles || [])
      } else {
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º - –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const allArticles = []
        if (data.sources) {
          Object.values(data.sources).forEach(sourceArticles => {
            allArticles.push(...sourceArticles)
          })
        }
        setNews(allArticles)
      }
      
      setLastParsed(new Date().toISOString())
      console.log(`–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ. –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${news.length || data.articles?.length || 0}`)
      
    } catch (error) {
      console.error('Error parsing news:', error)
      
      if (error.name === 'AbortError') {
        const timeoutMinutes = maxArticles > 100 ? 15 : maxArticles > 50 ? 10 : 5
        alert(`–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (${timeoutMinutes} –º–∏–Ω—É—Ç). 
        
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π (–ø–æ–ø—Ä–æ–±—É–π—Ç–µ ${Math.floor(maxArticles/2)})
‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–º–µ—Å—Ç–æ –≤—Å–µ—Ö
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ - –≤–æ–∑–º–æ–∂–Ω–æ –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è`)
      } else if (error.message.includes('Failed to fetch')) {
        alert(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. 
        
–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –±–æ–ª—å—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é
‚Ä¢ –°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.`)
      } else if (error.message.includes('Unexpected token')) {
        alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞. 
        
–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –°–µ—Ä–≤–µ—Ä –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å
‚Ä¢ –ù–µ–ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ - –ø–∞—Ä—Å–∏–Ω–≥ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ.`)
      } else if (error.message.includes('HTTP 5')) {
        alert(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (${error.message}). 
        
–°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –±–æ–ª—å—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º. 
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.`)
      } else {
        alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –Ω–æ–≤–æ—Å—Ç–µ–π: ${error.message}
        
–ï—Å–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–∞—Ç–µ–π, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ - 
–ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ.`)
      }
    } finally {
      setLoading(false)
    }
  }

  const testParser = async () => {
    setLoading(true)
    try {
      const response = await fetch('/api/news/sources/test')
      const data = await response.json()
      
      if (data.status === 'success') {
        alert(`–ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${data.sample_titles.length}\n\n–ü—Ä–∏–º–µ—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:\n${data.sample_titles.join('\n')}`)
      } else {
        alert(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: ${data.message}`)
      }
    } catch (error) {
      console.error('Error testing parser:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä—Å–µ—Ä–∞: ' + error.message)
    } finally {
      setLoading(false)
    }
  }

  const formatDate = (dateString) => {
    if (!dateString) return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
    
    try {
      const date = new Date(dateString)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –≤–∞–ª–∏–¥–Ω–∞
      if (isNaN(date.getTime())) {
        return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
      }
      
      // –î–ª—è –¥–∞—Ç –≤ ISO —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-07-02T10:01:50) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
      if (dateString.includes('T') && dateString.includes(':')) {
        return date.toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        })
      }
      
      // –ï—Å–ª–∏ –≤—Ä–µ–º—è 00:00, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É
      if (date.getHours() === 0 && date.getMinutes() === 0) {
        return date.toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })
      }
      
      // –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
      return date.toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })
    } catch (error) {
      console.error('Error formatting date:', error)
      return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'
    }
  }

  const openArticleModal = (article) => {
    setSelectedArticle(article)
    setIsModalOpen(true)
  }

  const closeArticleModal = () => {
    setIsModalOpen(false)
    setSelectedArticle(null)
  }

  return (
    <div className="space-y-6">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ */}
      {/* Controls */}
      <div className="bg-white rounded-lg shadow p-6">
        <h3 className="text-lg font-medium text-gray-900 mb-4">
          üîß –ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π
        </h3>
        <p className="text-gray-600 mb-6">
          –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ PostgreSQL
        </p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              <GlobalIcon className="inline mr-1" />
              –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
            </label>
            <select
              value={selectedSources.length === 1 ? selectedSources[0] : 'all'}
              onChange={(e) => {
                if (e.target.value === 'all') {
                  setSelectedSources(['ria', 'medvestnik', 'aig', 'remedium', 'rbc_medical'])
                } else {
                  setSelectedSources([e.target.value])
                }
              }}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏</option>
              {availableSources.map(source => (
                <option key={source.value} value={source.value}>
                  {source.label}
                </option>
              ))}
            </select>
            <p className="text-xs text-gray-500 mt-1">
              {selectedSources.length === 1 
                ? availableSources.find(s => s.value === selectedSources[0])?.description
                : '–ü–∞—Ä—Å–∏–Ω–≥ –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤'
              }
            </p>
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π
            </label>
            <input
              type="number"
              min="1"
              max="200"
              value={maxArticles}
              onChange={(e) => setMaxArticles(parseInt(e.target.value))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            {maxArticles > 100 && (
              <p className="text-xs text-amber-600 mt-1">
                ‚ö†Ô∏è –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 15 –º–∏–Ω—É—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º.
              </p>
            )}
            {maxArticles > 50 && maxArticles <= 100 && (
              <p className="text-xs text-amber-600 mt-1">
                ‚ö†Ô∏è –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 10 –º–∏–Ω—É—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º.
              </p>
            )}
          </div>
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ
            </label>
            <select
              value={dateFilter}
              onChange={(e) => setDateFilter(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="">–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏</option>
              <option value="today">–°–µ–≥–æ–¥–Ω—è</option>
              <option value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</option>
              <option value="month">–ó–∞ –º–µ—Å—è—Ü</option>
            </select>
          </div>
          
          <div className="flex items-end space-x-2">
            <button
              onClick={parseNews}
              disabled={loading}
              className="flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
            >
              {loading ? (
                <>
                  <LoadingIcon className="animate-spin mr-2" />
                  –ü–∞—Ä—Å–∏–Ω–≥...
                </>
              ) : (
                <>
                  <FaPlay className="mr-2" />
                  –ü–∞—Ä—Å–∏—Ç—å
                </>
              )}
            </button>
            
            <button
              onClick={parseNewsToDatabase}
              disabled={loading}
              className="flex-1 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
            >
              {loading ? (
                <>
                  <LoadingIcon className="animate-spin mr-2" />
                  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                </>
              ) : (
                <>
                  <NewsIcon className="mr-2" />
                  –í PostgreSQL
                </>
              )}
            </button>
          </div>
        </div>
        
        <div className="flex space-x-4 items-center">
          <button
            onClick={testParser}
            disabled={loading}
            className="bg-gray-600 text-white px-4 py-2 rounded-md hover:bg-gray-700 disabled:opacity-50"
          >
            –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞
          </button>
          
          <label className="flex items-center">
            <input
              type="checkbox"
              checked={fastMode}
              onChange={(e) => setFastMode(e.target.checked)}
              className="mr-2 w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <span className="text-sm text-gray-700">
              –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º (–±–µ–∑ –¥–∞—Ç –∏ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
            </span>
          </label>
          
          <label className="flex items-center">
            <input
              type="checkbox"
              checked={combineResults}
              onChange={(e) => setCombineResults(e.target.checked)}
              className="mr-2 w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <span className="text-sm text-gray-700">
              –û–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            </span>
          </label>
          
          {lastParsed && (
            <div className="flex items-center text-sm text-gray-500">
              <CalendarIcon className="mr-2" />
              –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥: {formatDate(lastParsed)}
            </div>
          )}
        </div>
      </div>

      {/* Results */}
      {news && news.length > 0 && (
        <div className="bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">
              –ù–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ ({news.length})
            </h3>
            <div className="mt-1 space-y-1">
              {selectedPlatform && (
                <p className="text-sm text-gray-600">
                  –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: {selectedPlatform}
                </p>
              )}
              <p className="text-sm text-gray-600">
                <GlobalIcon className="inline mr-1" />
                –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {selectedSources.map(sourceValue => {
                  const source = availableSources.find(s => s.value === sourceValue)
                  return source ? source.label : sourceValue
                }).join(', ')}
              </p>
            </div>
          </div>
          
          <div className="divide-y divide-gray-200">
            {news.map((article, index) => (
              <div key={index} className="p-6 hover:bg-gray-50">
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <h4 className="text-base font-medium text-gray-900 mb-2">
                      {article.title}
                    </h4>
                    
                    <p className="text-gray-600 mb-3 line-clamp-3">
                      {article.content}
                    </p>
                    
                    <div className="flex items-center space-x-4 text-sm text-gray-500">
                      <span className="flex items-center">
                        <CalendarIcon className="mr-1" />
                        {formatDate(article.published_date)}
                      </span>
                      
                      {article.published_time && (
                        <span className="flex items-center">
                          <ClockIcon className="mr-1" />
                          {article.published_time}
                        </span>
                      )}
                      
                      {article.views_count && (
                        <span className="flex items-center">
                          <ViewIcon className="mr-1" />
                          {article.views_count} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                        </span>
                      )}
                      
                      <span className="flex items-center">
                        <FilterIcon className="mr-1" />
                        {article.source_site}
                      </span>
                    </div>
                  </div>
                  
                  <div className="ml-4 flex-shrink-0 space-y-2">
                    <button
                      onClick={() => openArticleModal(article)}
                      className="w-full inline-flex items-center justify-center px-3 py-2 border border-blue-300 rounded-md text-sm font-medium text-blue-700 bg-blue-50 hover:bg-blue-100"
                    >
                      <InfoIcon className="mr-2" />
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <a
                      href={article.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="w-full inline-flex items-center justify-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
                    >
                      <ExternalIcon className="mr-2" />
                      –ò—Å—Ç–æ—á–Ω–∏–∫
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
      
      {(!news || news.length === 0) && !loading && (
        <div className="bg-white rounded-lg shadow p-12 text-center">
          <FilterIcon className="text-6xl text-gray-300 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </h3>
          <p className="text-gray-600">
            –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
          </p>
        </div>
      )}

      {/* Article Modal */}
      <ArticleModal
        article={selectedArticle}
        isOpen={isModalOpen}
        onClose={closeArticleModal}
      />
    </div>
  )
}

export default NewsParser