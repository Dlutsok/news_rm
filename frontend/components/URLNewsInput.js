import { useState } from 'react'
import { HiOutlineGlobeAlt, HiOutlineNewspaper, HiOutlineExclamationCircle, HiOutlinePlus, HiOutlineEye } from 'react-icons/hi2'
import { LuLoader2 } from 'react-icons/lu'
import Button from './ui/Button'
import Input from './ui/Input'
import Alert from './ui/Alert'
import ProjectSelectorModal from './ProjectSelectorModal'
import ArticlePreviewModal from './ArticlePreviewModal'
import ProgressModal from './ProgressModal'
import SummaryConfirmation from './SummaryConfirmation'
import ArticleEditor from './ArticleEditor'
import ArticlePreview from './ArticlePreview'
import PublicationModal from './PublicationModal'
import apiClient from '@utils/api'

const URLNewsInput = ({ onArticleLoaded, onDraftGenerated, onGenerationStarted }) => {
  const [url, setUrl] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [loadingStep, setLoadingStep] = useState(null) // 'fetching', 'cleaning', 'done'
  const [error, setError] = useState(null)
  const [parsedArticle, setParsedArticle] = useState(null)
  
  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  const [isProjectSelectorOpen, setIsProjectSelectorOpen] = useState(false)
  const [isPreviewOpen, setIsPreviewOpen] = useState(false)

  // üéØ FLOW –ì–ï–ù–ï–†–ê–¶–ò–ò (–∫–∞–∫ –≤ FoundNews)
  const [selectedProject, setSelectedProject] = useState(null)
  const [currentStep, setCurrentStep] = useState('project') // 'project', 'summary', 'editing', 'preview'
  const [summaryData, setSummaryData] = useState(null)
  const [generatedArticle, setGeneratedArticle] = useState(null)
  const [draftId, setDraftId] = useState(null)
  const [isGenerating, setIsGenerating] = useState(false)
  const [showProgressModal, setShowProgressModal] = useState(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  const [publishModal, setPublishModal] = useState({ open: false, project: null, bitrixId: null, url: null })
  const [isPublicationModalOpen, setIsPublicationModalOpen] = useState(false)
  const [publicationData, setPublicationData] = useState(null)

  const isValidURL = (string) => {
    try {
      new URL(string)
      return true
    } catch (_) {
      return false
    }
  }

  const handleLoadArticle = async () => {
    setError(null)

    if (!url.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ URL')
      return
    }

    if (!isValidURL(url)) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://example.com/news/123)')
      return
    }

    setIsLoading(true)
    setLoadingStep('fetching')

    try {
      // –≠—Ç–∞–ø 1: –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ Jina AI
      setLoadingStep('fetching')
      
      const result = await apiClient.parseURLArticle(url.trim())
      
      // –≠—Ç–∞–ø 2: AI –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ backend)
      setLoadingStep('cleaning')

      if (result.success) {
        setLoadingStep('done')
        
        const article = {
          id: result.article_id,  // ID —Å—Ç–∞—Ç—å–∏ –≤ –ë–î
          title: result.title || extractTitle(result.content),
          text: result.content,
          url: result.url,
          domain: result.domain,
          source: 'url',
          published_at: new Date().toISOString()
        }

        setParsedArticle(article)

        if (onArticleLoaded) {
          onArticleLoaded(article)
        }
      } else {
        setError(result.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å')
      }
    } catch (err) {
      console.error('Error loading article from URL:', err)
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–∏')
    } finally {
      setIsLoading(false)
      setLoadingStep(null)
    }
  }

  const extractTitle = (markdown) => {
    // –ò—â–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ markdown
    const titleMatch = markdown.match(/^#\s+(.+)$/m) || markdown.match(/^Title:\s*(.+)$/m)
    if (titleMatch) {
      return titleMatch[1].trim()
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤
    const firstLine = markdown.split('\n').find(line => line.trim().length > 10)
    return firstLine ? firstLine.substring(0, 100) : '–ù–æ–≤–æ—Å—Ç—å –∏–∑ URL'
  }

  const handleReset = () => {
    setParsedArticle(null)
    setUrl('')
    setError(null)
    resetGenerationState()
  }

  const handleAddToProject = () => {
    setIsProjectSelectorOpen(true)
  }

  // üéØ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ö–∞–∫ –≤ FoundNews.js
  const handleProjectSelected = async (projectData) => {
    console.log('üöÄ Starting generation flow for URL article:', projectData)
    setSelectedProject(projectData)
    setIsProjectSelectorOpen(false)
    setShowProgressModal(true)
    setCurrentStep('summary')
    setIsGenerating(true)

    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    if (onGenerationStarted) {
      onGenerationStarted(parsedArticle.id)
    }

    try {
      // –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è summary (–∫–∞–∫ –≤ FoundNews)
      console.log('üìù Generating summary...')
      const summaryResponse = await apiClient.request('/api/news-generation/summarize', {
        method: 'POST',
        body: JSON.stringify({
          article_id: parsedArticle.id,
          project: projectData.type,
        }),
      })

      setSummaryData({ 
        summary: summaryResponse.summary, 
        facts: summaryResponse.facts || [] 
      })
      setDraftId(summaryResponse.draft_id)
      console.log('‚úÖ Summary generated:', summaryResponse)

    } catch (err) {
      console.error('‚ùå Error generating summary:', err)
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—ã–∂–∏–º–∫–∏')
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—ã–∂–∏–º–∫–∏: ' + err.message)
      resetGenerationState()
    } finally {
      setIsGenerating(false)
    }
  }

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ summary ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏
  const handleSummaryConfirm = async (confirmedSummary) => {
    setIsGenerating(true)

    try {
      // –®–ê–ì 1: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–∂–∏–º–∫–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞)
      console.log('‚úÖ Confirming summary...')
      await apiClient.request('/api/news-generation/confirm-summary', {
        method: 'POST',
        body: JSON.stringify({
          draft_id: draftId,
          summary: confirmedSummary.summary,
          facts: confirmedSummary.facts,
        }),
      })

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
      setCurrentStep('editing')
      setSummaryData(null)

      // –®–ê–ì 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç—å–∏
      console.log('üì∞ Generating full article...')
      const articleResponse = await apiClient.request('/api/news-generation/generate-article', {
        method: 'POST',
        body: JSON.stringify({
          draft_id: draftId,
          formatting_options: confirmedSummary.formatting_options || {}
        }),
      })

      setGeneratedArticle(articleResponse)
      console.log('‚úÖ Article generated:', articleResponse)

      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      if (onDraftGenerated) {
        onDraftGenerated({
          id: draftId,
          article: parsedArticle,
          draft: articleResponse,
          isNew: true,
          source: 'url'
        })
      }

    } catch (err) {
      console.error('‚ùå Error generating article:', err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏: ' + err.message)
      resetGenerationState()
    } finally {
      setIsGenerating(false)
    }
  }

  // –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è summary
  const handleSummaryRegenerate = async () => {
    setIsGenerating(true)

    try {
      const summaryResponse = await apiClient.request('/api/news-generation/summarize', {
        method: 'POST',
        body: JSON.stringify({
          article_id: parsedArticle.id,
          project: selectedProject.type,
        }),
      })

      setSummaryData({ 
        summary: summaryResponse.summary, 
        facts: summaryResponse.facts || [] 
      })
      setDraftId(summaryResponse.draft_id)
    } catch (err) {
      console.error('Error regenerating summary:', err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–∂–∏–º–∫–∏: ' + err.message)
    } finally {
      setIsGenerating(false)
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
  const handleArticleSave = async (articleData) => {
    try {
      const savedData = await apiClient.request(`/api/news-generation/drafts/${draftId}`, {
        method: 'PUT',
        body: JSON.stringify(articleData),
      })
      setGeneratedArticle(savedData)
      console.log('‚úÖ Draft saved:', savedData)
      alert('–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!')
    } catch (err) {
      console.error('Error saving draft:', err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + err.message)
    }
  }

  // –û—Ç–∫—Ä—ã—Ç—å preview
  const handlePreview = () => {
    setCurrentStep('preview')
  }

  // –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleRegenerateImage = async () => {
    try {
      setIsGenerating(true)
      const response = await apiClient.request('/api/news-generation/regenerate-image', {
        method: 'POST',
        body: JSON.stringify({
          draft_id: draftId,
          new_prompt: null  // Backend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–º–ø—Ç –∏–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
        })
      })
      
      setGeneratedArticle(prev => ({
        ...prev,
        image_url: response.image_url
      }))
      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–±—Ä–∞–Ω–æ - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    } catch (err) {
      console.error('Error regenerating image:', err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ' + err.message)
    } finally {
      setIsGenerating(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  const openPublicationModal = (articleData = null, projectOrCode = null) => {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞: 'GS' | 'TS' | 'PS'
    let resolvedCode = null
    if (typeof projectOrCode === 'string') {
      resolvedCode = projectOrCode
    } else if (projectOrCode && typeof projectOrCode === 'object') {
      resolvedCode = projectOrCode.code || null
    } else if (selectedProject && selectedProject.code) {
      resolvedCode = selectedProject.code
    }

    if (!resolvedCode) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
      return
    }

    // –î–ª—è GS/PS/TS –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    setPublicationData({
      articleData,
      projectCode: resolvedCode,
      draftId
    })
    setIsPublicationModalOpen(true)
  }

  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handlePublicationFromModal = async (publishData) => {
    try {
      setIsGenerating(true)

      // –ü–µ—Ä–µ–¥ —Å–∞–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∞–≤–∫–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞,
      // —á—Ç–æ–±—ã –≤ –ë–∏—Ç—Ä–∏–∫—Å —É—à—ë–ª –∞–∫—Ç—É–∞–ª—å–Ω—ã–π HTML-–∫–æ–Ω—Ç–µ–Ω—Ç
      try {
        const dataToPersist = publicationData?.articleData || generatedArticle
        if (dataToPersist && publicationData?.draftId) {
          const saved = await apiClient.request(`/api/news-generation/drafts/${publicationData.draftId}`, {
            method: 'PUT',
            body: JSON.stringify(dataToPersist)
          })
          setGeneratedArticle(saved)
        }
      } catch (persistErr) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π:', persistErr)
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é, –Ω–æ —É–≤–µ–¥–æ–º–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π. –ë—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è.')
      }

      const endpoint = '/api/news-generation/publish'

      const response = await apiClient.request(endpoint, {
        method: 'POST',
        body: JSON.stringify(publishData)
      })

      if (response.success) {
        if (publishData.mode === 'now') {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
          setPublishModal({
            open: true,
            project: response.project,
            bitrixId: response.bitrix_id,
            url: response.url
          })
        } else {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
          alert(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ ${new Date(publishData.scheduled_at).toLocaleString('ru-RU')}`)
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        resetGenerationState()
      } else {
        throw new Error(response.error || '–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error)
      alert(`–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${error.message}`)
    } finally {
      setIsGenerating(false)
      setIsPublicationModalOpen(false)
    }
  }

  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const resetGenerationState = () => {
    setSelectedProject(null)
    setCurrentStep('project')
    setSummaryData(null)
    setGeneratedArticle(null)
    setDraftId(null)
    setIsGenerating(false)
    setShowProgressModal(false)
    // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º publishModal –∑–¥–µ—Å—å - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä–æ–µ—Ç –µ–≥–æ –≤—Ä—É—á–Ω—É—é
    setIsPublicationModalOpen(false)
    setPublicationData(null)
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const getLoadingStepLabel = (step) => {
    const steps = {
      'fetching': '–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—å–∏...',
      'cleaning': 'üßπ AI –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (GPT-4o-mini)...',
      'done': '–ì–æ—Ç–æ–≤–æ!'
    }
    return steps[step] || '–û–±—Ä–∞–±–æ—Ç–∫–∞...'
  }

  return (
    <>
      {/* Project Selector Modal */}
      <ProjectSelectorModal
        isOpen={isProjectSelectorOpen}
        onClose={() => !isGenerating && setIsProjectSelectorOpen(false)}
        onSelectProject={handleProjectSelected}
        article={parsedArticle}
      />

      {/* Article Preview Modal */}
      <ArticlePreviewModal
        isOpen={isPreviewOpen}
        onClose={() => setIsPreviewOpen(false)}
        article={parsedArticle}
      />

      {/* üéØ –ì–ï–ù–ï–†–ê–¶–ò–Ø FLOW: Progress Modal */}
      <ProgressModal
        isOpen={showProgressModal}
        onClose={() => !isGenerating && resetGenerationState()}
        currentStep={currentStep}
        isGenerating={isGenerating}
        selectedProject={selectedProject}
        articleTitle={parsedArticle?.title}
      />

      {/* üéØ Summary Confirmation Modal */}
      {currentStep === 'summary' && summaryData && (
        <SummaryConfirmation
          isOpen={true}
          summary={summaryData.summary || summaryData}
          facts={summaryData.facts || []}
          onConfirm={handleSummaryConfirm}
          onRegenerate={handleSummaryRegenerate}
          onClose={resetGenerationState}
          isLoading={isGenerating}
        />
      )}

      {/* üéØ Article Editor Modal */}
      {currentStep === 'editing' && generatedArticle && (
        <ArticleEditor
          isOpen={true}
          articleData={generatedArticle}
          onSave={handleArticleSave}
          onPreview={handlePreview}
          onRegenerateImage={handleRegenerateImage}
          onPublish={openPublicationModal}
          publishLabel="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
          onClose={resetGenerationState}
          isLoading={isGenerating}
          isPublishing={isGenerating}
        />
      )}

      {/* üéØ Article Preview Modal */}
      {currentStep === 'preview' && generatedArticle && selectedProject && (
        <ArticlePreview
          isOpen={true}
          articleData={generatedArticle}
          project={selectedProject}
          onPublish={openPublicationModal}
          onClose={() => setCurrentStep('editing')}
          isLoading={isGenerating}
        />
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
      <PublicationModal
        isOpen={isPublicationModalOpen}
        onClose={() => setIsPublicationModalOpen(false)}
        draftId={publicationData?.draftId}
        projectCode={publicationData?.projectCode}
        onPublish={handlePublicationFromModal}
      />

      {/* –û–°–ù–û–í–ù–û–ô UI */}
      <div className="space-y-4">
        {!parsedArticle ? (
          <div className="bg-white rounded-lg border border-gray-200 p-6">
            <div className="flex items-start space-x-3 mb-4">
              <HiOutlineGlobeAlt className="w-6 h-6 text-purple-600 mt-1" />
              <div className="flex-1">
                <h3 className="text-lg font-semibold text-gray-900 mb-1">
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –ø–æ URL
                </h3>
                <p className="text-sm text-gray-600">
                  –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ª—é–±—É—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –ú—ã –∏–∑–≤–ª–µ—á—ë–º —Ç–µ–∫—Å—Ç –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ GPT-4o-mini.
                </p>
              </div>
            </div>

            <div className="space-y-3">
              <Input
                type="url"
                placeholder="https://example.com/news/article-123"
                value={url}
                onChange={(e) => setUrl(e.target.value)}
                disabled={isLoading}
                onKeyPress={(e) => {
                  if (e.key === 'Enter') {
                    handleLoadArticle()
                  }
                }}
              />

              {error && (
                <Alert type="error" className="flex items-start">
                  <HiOutlineExclamationCircle className="w-5 h-5 mr-2 flex-shrink-0 mt-0.5" />
                  <span>{error}</span>
                </Alert>
              )}

              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
              {isLoading && loadingStep && (
                <div className="p-3 bg-blue-50 border border-blue-200 rounded-lg">
                  <div className="flex items-center space-x-2">
                    <LuLoader2 className="w-4 h-4 text-blue-600 animate-spin flex-shrink-0" />
                    <p className="text-sm font-medium text-blue-900">
                      {getLoadingStepLabel(loadingStep)}
                    </p>
                  </div>
                  {loadingStep === 'cleaning' && (
                    <p className="text-xs text-blue-700 mt-1 ml-6">
                      –ò—Å–ø–æ–ª—å–∑—É–µ–º GPT-4o-mini –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Ä–µ–∫–ª–∞–º—ã, footer...
                    </p>
                  )}
                </div>
              )}

              <Button
                onClick={handleLoadArticle}
                disabled={isLoading || !url.trim()}
                className="w-full"
              >
                {isLoading ? (
                  <>
                    <LuLoader2 className="animate-spin mr-2" />
                    {getLoadingStepLabel(loadingStep)}
                  </>
                ) : (
                  <>
                    <HiOutlineGlobeAlt className="mr-2" />
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
                  </>
                )}
              </Button>
            </div>

            <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
              <p className="text-xs text-blue-800">
                <strong>–°–æ–≤–µ—Ç:</strong> –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ª—é–±—ã–µ –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ —Å–∞–π—Ç—ã.
                –ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á—ë–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏, –æ—á–∏—Å—Ç–∏–º –æ—Ç —Ä–µ–∫–ª–∞–º—ã –∏ –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ AI.
              </p>
            </div>
          </div>
        ) : (
          <div className="bg-white rounded-lg border-2 border-purple-200 p-6">
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start space-x-3 flex-1">
                <HiOutlineNewspaper className="w-6 h-6 text-purple-600 mt-1 flex-shrink-0" />
                <div className="flex-1 min-w-0">
                  <h3 className="text-lg font-semibold text-gray-900 mb-1 break-words">
                    {parsedArticle.title}
                  </h3>
                  <div className="flex items-center text-sm text-gray-500 mb-3">
                    <HiOutlineGlobeAlt className="w-4 h-4 mr-1" />
                    <span className="break-all">{parsedArticle.domain}</span>
                  </div>
                </div>
              </div>
            </div>

            <div className="prose prose-sm max-w-none mb-4">
              <p className="text-gray-700 line-clamp-6">
                {parsedArticle.text.substring(0, 500)}...
              </p>
            </div>

            <div className="flex flex-col space-y-3 pt-4 border-t border-gray-200">
              <div className="flex items-center text-sm text-green-600">
                <svg className="w-5 h-5 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                <span>–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ ({parsedArticle.text.length} —Å–∏–º–≤–æ–ª–æ–≤)</span>
              </div>

              <div className="flex items-center justify-between">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => setIsPreviewOpen(true)}
                  className="text-purple-600 border-purple-200 hover:bg-purple-50"
                >
                  <HiOutlineEye className="mr-2" />
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç
                </Button>

                <div className="flex items-center space-x-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={handleReset}
                  >
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥—É—é
                  </Button>

                  <Button
                    size="sm"
                    onClick={handleAddToProject}
                    disabled={isGenerating}
                    className="bg-purple-600 hover:bg-purple-700 text-white disabled:bg-gray-400 disabled:cursor-not-allowed"
                  >
                    <HiOutlinePlus className="mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç
                  </Button>
                </div>
              </div>
            </div>

            <div className="mt-4 p-3 bg-purple-50 border border-purple-200 rounded-lg">
              <p className="text-xs text-purple-800">
                <strong>–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:</strong> –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç", –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
                (Gynecology School / Therapy School / Pediatrics School), –∏ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç
                –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å—Ç–∞—Ç—å—é —Å SEO –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ —Ç–æ—Ç –∂–µ –ø—Ä–æ—Ü–µ—Å—Å —á—Ç–æ –∏ –æ–±—ã—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏.
              </p>
            </div>
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
      {publishModal.open && (
        <div className="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-[9999] p-4">
          <div className="bg-white rounded-2xl max-w-lg w-full overflow-hidden shadow-2xl border border-gray-100">
            <div className="px-6 py-5 border-b bg-gradient-to-r from-green-50 to-emerald-50">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 rounded-xl bg-emerald-600 text-white flex items-center justify-center">
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                  </svg>
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-900">–°—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞</h3>
                  {publishModal.project && (
                    <p className="text-sm text-gray-600">–ü—Ä–æ–µ–∫—Ç: {publishModal.project}</p>
                  )}
                </div>
              </div>
            </div>
            <div className="px-6 py-5 space-y-3">
              {publishModal.url ? (
                <div className="text-gray-800 text-sm break-all">
                  –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é:
                  <div>
                    <a href={publishModal.url} target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:text-blue-800 underline">
                      {publishModal.url}
                    </a>
                  </div>
                </div>
              ) : (
                <p className="text-gray-700">–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.</p>
              )}
            </div>
            <div className="px-6 py-4 border-t bg-gray-50 flex items-center justify-end">
              <button
                onClick={() => {
                  setPublishModal({ open: false, project: null, bitrixId: null, url: null })
                  resetGenerationState()
                }}
                className="px-5 py-2 bg-gray-900 text-white rounded-lg hover:bg-gray-800 transition-colors"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  )
}

export default URLNewsInput