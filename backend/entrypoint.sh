#!/bin/bash
set -e

echo "üöÄ Starting Medical News Backend..."

# –ü–æ–ª—É—á–∞–µ–º —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç –ë–î –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
DB_HOST=${DATABASE_HOST:-172.18.0.1}
DB_PORT=${DATABASE_PORT:-5432}
DB_USER=${DATABASE_USER:-postgres}

echo "üì° Database connection info:"
echo "   Host: ${DB_HOST}"
echo "   Port: ${DB_PORT}"
echo "   User: ${DB_USER}"

# –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ Waiting for PostgreSQL to be ready..."
/wait-for-db.sh "${DB_HOST}:${DB_PORT}" --timeout=60

echo "‚úÖ PostgreSQL is ready!"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
echo "üîÑ Applying database migrations..."
cd /app

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π
if [ -f "database/migrate.py" ]; then
    echo "üìÑ Running database migrations..."
    python database/migrate.py init
    echo "‚úÖ Database migrations completed successfully"
else
    echo "‚ö†Ô∏è Migration script not found, skipping migrations"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
echo "üîç Testing database connection..."
python -c "
from database.connection import engine
from sqlmodel import Session, text
try:
    with Session(engine) as session:
        result = session.exec(text('SELECT version();')).first()
        print(f'‚úÖ Database connected successfully: {result}')
except Exception as e:
    print(f'‚ùå Database connection failed: {e}')
    exit(1)
"

echo "üéØ Database setup completed!"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ Starting FastAPI server..."
echo "üåê Server will be available at: http://0.0.0.0:8000"
echo "üìä Health check endpoint: http://0.0.0.0:8000/health"
echo "üìñ API documentation: http://0.0.0.0:8000/docs"

exec "$@"