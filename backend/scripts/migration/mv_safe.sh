#!/usr/bin/env bash

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å git mv –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./mv_safe.sh <from> <to> [--dry-run]

set -euo pipefail

usage() {
    echo "Usage: mv_safe.sh <from> <to> [--dry-run]"
    echo "  from:     Source path"
    echo "  to:       Destination path"
    echo "  --dry-run: Show what would be done without making changes"
    exit 1
}

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ $# -lt 2 ]]; then
    usage
fi

FROM="$1"
TO="$2"
DRY_RUN="${3:-}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞/–ø–∞–ø–∫–∏
if [[ ! -e "$FROM" ]]; then
    log "‚ùå Error: Source '$FROM' does not exist"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    log "‚ùå Error: Not in a git repository"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
TO_DIR=$(dirname "$TO")
if [[ ! -d "$TO_DIR" && "$TO_DIR" != "." ]]; then
    log "üìÅ Creating parent directory: $TO_DIR"
    if [[ "$DRY_RUN" != "--dry-run" ]]; then
        mkdir -p "$TO_DIR"
    fi
fi

log "üìã Plan: git mv '$FROM' -> '$TO'"

if [[ "$DRY_RUN" == "--dry-run" ]]; then
    log "üîç DRY RUN - would execute: git mv '$FROM' '$TO'"
    exit 0
fi

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ git mv
if git mv "$FROM" "$TO"; then
    log "‚úÖ Successfully moved: '$FROM' -> '$TO'"

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ git staging area –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    git add "$TO" 2>/dev/null || true

    log "üìù Files staged for commit. Use 'git status' to review changes."
else
    log "‚ùå Failed to move '$FROM' to '$TO'"
    exit 1
fi