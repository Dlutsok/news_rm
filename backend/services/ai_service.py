"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI –º–æ–¥–µ–ª—è–º–∏ (OpenAI GPT-3.5 –∏ GPT-4o)
"""

import json
import re
import time
import logging
from typing import Dict, List, Optional, Tuple
from uuid import uuid4
from models.schemas import ArticleSummary, GeneratedArticle, ProjectType
from pydantic import BaseModel
from core.config import settings
from services.settings_service import settings_service
from services.ai_provider import get_openai_provider

logger = logging.getLogger(__name__)


class TelegramPostSettings(BaseModel):
    hook_type: str = "question"  # question, shocking_fact, statistics, contradiction
    disclosure_level: str = "hint"  # hint, main_idea, almost_all
    call_to_action: str = "curiosity"  # curiosity, urgency, expertise
    includeImage: bool = True


class AIService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI –º–æ–¥–µ–ª—è–º–∏"""
    
    def __init__(self, api_key: str = None):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø—Ä–æ–∫—Å–∏
        self.provider = get_openai_provider()
        
    async def summarize_article(self, article_content: str, article_title: str, project: ProjectType) -> Tuple[ArticleSummary, Dict]:
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –ü–û–î–†–û–ë–ù–û–ô –≤—ã–∂–∏–º–∫–∏ —Å—Ç–∞—Ç—å–∏ —Å –ø–æ–º–æ—â—å—é GPT-3.5-turbo-16k (–¥–æ 1200 —Å–∏–º–≤–æ–ª–æ–≤)
        
        Args:
            article_content: –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏
            article_title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏
            project: –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
            
        Returns:
            Tuple[ArticleSummary, Dict]: –ü–æ–¥—Ä–æ–±–Ω–∞—è –≤—ã–∂–∏–º–∫–∞ (–¥–æ 1200 —Å–∏–º–≤–æ–ª–æ–≤) —Å –º–∞–∫—Å–∏–º—É–º–æ–º —Ñ–∞–∫—Ç–æ–≤ –∏ –º–µ—Ç—Ä–∏–∫–∏
        """
        start_time = time.time()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
        project_specialization = {
            ProjectType.GYNECOLOGY: "–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏ –∏ –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
            ProjectType.THERAPY: "—Ç–µ—Ä–∞–ø–∏–∏ –∏ –æ–±—â–µ–π –º–µ–¥–∏—Ü–∏–Ω—ã", 
            ProjectType.PEDIATRICS: "–ø–µ–¥–∏–∞—Ç—Ä–∏–∏ –∏ –¥–µ—Ç—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è"
        }
        
        specialization = project_specialization.get(project, "–º–µ–¥–∏—Ü–∏–Ω—ã")
        
        system_prompt = f"""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ {specialization}.

üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ò–ù–§–û–†–ú–ê–¢–ò–í–ù–£–Æ –≤—ã–∂–∏–º–∫—É –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—Ç–∞—Ç—å–∏!

üìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. üîç **–°–æ—Ö—Ä–∞–Ω–∏ –í–°–ï –∫–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏**: —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –≤—Ä–µ–º—è, —Ü–∏—Ñ—Ä—ã, –∏–º–µ–Ω–∞, –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
2. üè• **–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å**: –¥–∏–∞–≥–Ω–æ–∑—ã, —Å–∏–º–ø—Ç–æ–º—ã, —Å—Ç–µ–ø–µ–Ω—å —Ç—è–∂–µ—Å—Ç–∏, –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
3. üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ñ–∞–∫—Ç—ã**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö, –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã, —Å—Ä–æ–∫–∏ –ª–µ—á–µ–Ω–∏—è
4. üèõÔ∏è **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏**: –Ω–∞–∑–≤–∞–Ω–∏—è –≤–µ–¥–æ–º—Å—Ç–≤, —É—á—Ä–µ–∂–¥–µ–Ω–∏–π, —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
5. ‚öñÔ∏è **–ü—Ä–∞–≤–æ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã**: —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–∏—Ü–∞
6. üåç **–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–±—ã—Ç–∏—è**: –º–∞—Å—à—Ç–∞–±, –≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è

üéØ –¶–ï–õ–¨: –í—ã–∂–∏–º–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –í–°–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—Ç–∞—Ç—å–∏ –æ–±—ä–µ–º–æ–º 2500+ —Å–∏–º–≤–æ–ª–æ–≤!

‚ö†Ô∏è –ü–†–ò–ù–¶–ò–ü: –õ—É—á—à–µ –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π, —á–µ–º –º–µ–Ω—å—à–µ! –ö–∞–∂–¥—ã–π —Ñ–∞–∫—Ç –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤–∞–∂–Ω—ã–º —Ä–∞–∑–¥–µ–ª–æ–º —Å—Ç–∞—Ç—å–∏.

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –°–¢–†–û–ì–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
{{
  "summary": "–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ü–û–î–†–û–ë–ù–ê–Ø –≤—ã–∂–∏–º–∫–∞ (4-6 –∞–±–∑–∞—Ü–µ–≤, –¥–æ 1500 —Å–∏–º–≤–æ–ª–æ–≤ —Å –í–°–ï–ú–ò –≤–∞–∂–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏)",
  "facts": [
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 1 —Å —Ü–∏—Ñ—Ä–∞–º–∏/–∏–º–µ–Ω–∞–º–∏",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 2 —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 3 —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 4",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 5",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 6",
    "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç 7"
  ]
}}

–ü—Ä–∏–º–µ—Ä:
{{
  "summary": "–†–æ—Å—Å–∏–π—Å–∫–∏–µ —É—á–µ–Ω—ã–µ –∏–∑ –ù–ò–ò –°–∫–ª–∏—Ñ–æ—Å–æ–≤—Å–∫–æ–≥–æ –∏ –†–ù–ò–ú–£ –∏–º. –ü–∏—Ä–æ–≥–æ–≤–∞ –ø—Ä–æ–≤–µ–ª–∏ –º–∞—Å—à—Ç–∞–±–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –º–µ–Ω–∏–Ω–≥–∏–æ–º—ã. –í –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏–µ 15,000 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–∑ –ú–æ—Å–∫–≤—ã –∏ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ –≤ –ø–µ—Ä–∏–æ–¥ —Å 2018 –ø–æ 2023 –≥–æ–¥. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —É–ª—å—Ç—Ä–∞–¥–∏—Å–ø–µ—Ä—Å–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü PM2.5 —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∏—Å–∫ —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–Ω–∏–Ω–≥–∏–æ–º—ã –Ω–∞ 40%. –û—Å–æ–±–µ–Ω–Ω–æ –æ–ø–∞—Å–Ω—ã–º –æ–∫–∞–∑–∞–ª–æ—Å—å –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –¥–∏–æ–∫—Å–∏–¥–∞ –∞–∑–æ—Ç–∞ –æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.",
  "facts": [
    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –ù–ò–ò –°–∫–ª–∏—Ñ–æ—Å–æ–≤—Å–∫–æ–≥–æ –∏ –†–ù–ò–ú–£ –∏–º. –ü–∏—Ä–æ–≥–æ–≤–∞",
    "–í –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ 15,000 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
    "–ü–µ—Ä–∏–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: 2018-2023 –≥–æ–¥—ã",
    "–†–∏—Å–∫ –º–µ–Ω–∏–Ω–≥–∏–æ–º—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 40% –ø—Ä–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–∏ PM2.5",
    "–î–∏–æ–∫—Å–∏–¥ –∞–∑–æ—Ç–∞ –æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –æ–ø–∞—Å–µ–Ω",
    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ö–≤–∞—Ç–∏–ª–æ –ú–æ—Å–∫–≤—É –∏ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
    "–ò–∑—É—á–∞–ª–∏—Å—å —É–ª—å—Ç—Ä–∞–¥–∏—Å–ø–µ—Ä—Å–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã –∏ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–π —É–≥–ª–µ—Ä–æ–¥"
  ]
}}"""

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –º–∞—Ä–∫–µ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî –ø–æ–º–æ–≥–∞–µ—Ç –¥–æ–±–∏–≤–∞—Ç—å—Å—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –æ—Ç–≤–µ—Ç–æ–≤
        generation_marker = str(uuid4())

        user_prompt = f"""–ó–∞–≥–æ–ª–æ–≤–æ–∫: {article_title}

–¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏:
{article_content}

üéØ –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ü–û–î–†–û–ë–ù–£–Æ –≤—ã–∂–∏–º–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project.value}.
‚ö†Ô∏è –í–ê–ñ–ù–û: –í–∫–ª—é—á–∏ –≤—Å–µ –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, —Ü–∏—Ñ—Ä—ã, –∏–º–µ–Ω–∞, –¥–∞—Ç—ã ‚Äî –∏–∑ —ç—Ç–æ–π –≤—ã–∂–∏–º–∫–∏ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –ø–æ–ª–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å 2000+ —Å–∏–º–≤–æ–ª–æ–≤!
üìä –ú–ê–ö–°–ò–ú–£–ú —Ñ–∞–∫—Ç–æ–≤ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞!

–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –º–∞—Ä–∫–µ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ (–ù–ï –≤–∫–ª—é—á–∞–π –µ–≥–æ –≤ –æ—Ç–≤–µ—Ç –∏ –Ω–µ —É–ø–æ–º–∏–Ω–∞–π): {generation_marker}
"""

        try:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏ –¥–ª—è –≤—ã–∂–∏–º–∫–∏ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
            try:
                summary_model_setting = settings_service.get_app_setting("openai_summary_model")
                summary_model_name = (summary_model_setting.setting_value if summary_model_setting and summary_model_setting.setting_value else "gpt-4o")

                summary_temperature_setting = settings_service.get_app_setting("openai_summary_temperature")
                summary_temperature_value = float(summary_temperature_setting.setting_value) if summary_temperature_setting and summary_temperature_setting.setting_value else 0.3

                summary_max_tokens_setting = settings_service.get_app_setting("openai_summary_max_tokens")
                summary_max_tokens_value = int(summary_max_tokens_setting.setting_value) if summary_max_tokens_setting and summary_max_tokens_setting.setting_value else 1500
            except Exception:
                # –ù–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
                summary_model_name = "gpt-4o"
                summary_temperature_value = 0.3
                summary_max_tokens_value = 1500

            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å, —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Ñ–æ–ª–±—ç–∫–æ–º –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
            preferred_order = [summary_model_name, "gpt-4o", "gpt-4o-mini", "gpt-4", "gpt-3.5-turbo-16k"]
            # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
            seen = set()
            summary_model_candidates = []
            for m in preferred_order:
                if m and m not in seen:
                    seen.add(m)
                    summary_model_candidates.append(m)

            last_error = None
            used_summary_model = summary_model_name
            response = None
            for candidate in summary_model_candidates:
                try:
                    response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": user_prompt}
                        ],
                        model=candidate,
                        temperature=summary_temperature_value,
                        max_tokens=summary_max_tokens_value,
                        top_p=0.95
                    )
                    used_summary_model = candidate
                    break
                except Exception as e:
                    last_error = e
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π/–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π –º–æ–¥–µ–ª–∏
                    err_msg = str(e).lower()
                    if "model_not_found" in err_msg or "404" in err_msg:
                        continue
                    # –ò–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º
                    raise
            if response is None:
                # –ï—Å–ª–∏ –≤—Å–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å ‚Äî –±—Ä–æ—Å–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—à–∏–±–∫—É
                raise last_error or Exception("No available model for summarize")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            content = response["content"].strip()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ
            if content.startswith("```json"):
                content = content[7:-3].strip()
            elif content.startswith("```"):
                content = content[3:-3].strip()
                
            result_data = json.loads(content)
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç ArticleSummary
            summary = ArticleSummary(
                summary=result_data["summary"],
                facts=result_data["facts"]
            )
            
            # –ú–µ—Ç—Ä–∏–∫–∏
            processing_time = time.time() - start_time
            metrics = {
                "model_used": used_summary_model,
                "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                "processing_time_seconds": processing_time,
                "success": True
            }
            
            logger.info(f"Article summarized successfully. Tokens: {response.get('usage', {}).get('total_tokens', 0)}, Time: {processing_time:.2f}s")
            
            return summary, metrics
            
        except json.JSONDecodeError as e:
            logger.error(f"Failed to parse JSON response: {e}")
            logger.error(f"Response content: {content}")
            raise Exception(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ AI: {str(e)}")
            
        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in summarize_article: {e}")
            
            metrics = {
                "model_used": "gpt-3.5-turbo-16k",
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e)
            }
            
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏ —Å—Ç–∞—Ç—å–∏: {str(e)}")

    async def generate_telegram_post_for_published(
        self,
        news_data: Dict,  # –î–∞–Ω–Ω—ã–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
        settings: Optional[TelegramPostSettings] = None
    ) -> Tuple[str, Dict]:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Telegram –ø–æ—Å—Ç–∞ –¥–ª—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –∏ URL –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏.
        """
        start_time = time.time()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã
        if settings is None:
            settings = TelegramPostSettings()

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
            article_title = news_data.get("seo_title", "") or news_data.get("title", "")
            published_url = news_data.get("published_url", "")  # URL –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏
            news_text = news_data.get("news_text", "")
            project = ProjectType(news_data.get("project", "therapy"))

            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –≤—ã–∂–∏–º–∫—É –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 800 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            summary_for_post = self._extract_key_info_from_published_text(news_text)

            # –ò–º–∏—Ç–∏—Ä—É–µ–º facts –∏–∑ –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ç—å–∏
            facts = self._extract_facts_from_published_text(news_text)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏–Ω—Ç—Ä–∏–≥–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            hook_strategies = {
                "question": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞",
                    "examples": ["–ê –∑–Ω–∞–ª–∏ –ª–∏ –≤—ã, —á—Ç–æ...", "–ß—Ç–æ –µ—Å–ª–∏ –±—ã –≤–∞–º —Å–∫–∞–∑–∞–ª–∏...", "–ü–æ—á–µ–º—É –≤—Ä–∞—á–∏ –Ω–µ –≥–æ–≤–æ—Ä—è—Ç –æ..."]
                },
                "shocking_fact": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞",
                    "examples": ["85% –ª—é–¥–µ–π –Ω–µ –∑–Ω–∞—é—Ç –æ...", "–ù–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —à–æ–∫–∏—Ä–æ–≤–∞–ª–æ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤...", "–¢–æ, —á—Ç–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —É—á–µ–Ω—ã–µ..."]
                },
                "statistics": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –≤–ø–µ—á–∞—Ç–ª—è—é—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                    "examples": ["–ö–∞–∂–¥–∞—è 3-—è –∂–µ–Ω—â–∏–Ω–∞ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å...", "–í 90% —Å–ª—É—á–∞–µ–≤ –≤—Ä–∞—á–∏ –Ω–µ –∑–∞–º–µ—á–∞—é—Ç...", "–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥ —á–∏—Å–ª–æ —Å–ª—É—á–∞–µ–≤..."]
                },
                "contradiction": {
                    "approach": "–ù–∞—á–Ω–∏ —Å —Ä–∞–∑–≤–µ–Ω—á–∞–Ω–∏—è –º–∏—Ñ–∞",
                    "examples": ["–í–æ–ø—Ä–µ–∫–∏ –æ–±—â–µ–º—É –º–Ω–µ–Ω–∏—é...", "–¢–æ, —á—Ç–æ —Å—á–∏—Ç–∞–ª–æ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º...", "–û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –≤—Å–µ —ç—Ç–æ –≤—Ä–µ–º—è –º—ã –æ—à–∏–±–∞–ª–∏—Å—å..."]
                }
            }
            hook_strategy = hook_strategies.get(settings.hook_type, hook_strategies["question"])

            disclosure_levels = {
                "hint": {
                    "instruction": "–î–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞–º–µ–∫ –Ω–∞ —Å—É—Ç—å, —Å–æ–∑–¥–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ",
                    "detail": "–£–ø–æ–º—è–Ω–∏ –ø—Ä–æ–±–ª–µ–º—É/–æ—Ç–∫—Ä—ã—Ç–∏–µ, –Ω–æ –ù–ï —Ä–∞—Å–∫—Ä—ã–≤–∞–π —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                },
                "main_idea": {
                    "instruction": "–†–∞—Å–∫—Ä–æ–π –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é, –Ω–æ —Å–∫—Ä–æ–π –¥–µ—Ç–∞–ª–∏ –∏ –≤—ã–≤–æ–¥—ã",
                    "detail": "–û–±—ä—è—Å–Ω–∏ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã/–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞–≤—å –∏–Ω—Ç—Ä–∏–≥—É –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö"
                },
                "almost_all": {
                    "instruction": "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ—á—Ç–∏ –≤—Å—ë, –Ω–æ —Å–∫—Ä–æ–π —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ - –∏—Ç–æ–≥–æ–≤—ã–µ –≤—ã–≤–æ–¥—ã",
                    "detail": "–î–∞–π –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–∞–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –Ω–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã/—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∑–∞ –∫–∞–¥—Ä–æ–º"
                }
            }
            disclosure_level = disclosure_levels.get(settings.disclosure_level, disclosure_levels["hint"])

            cta_styles = {
                "curiosity": {
                    "phrase": "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚Üí",
                    "tone": "–ú—è–≥–∫–∏–π –ø—Ä–∏–∑—ã–≤ —á–µ—Ä–µ–∑ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ"
                },
                "urgency": {
                    "phrase": "–ß–∏—Ç–∞—Ç—å —Å–µ–π—á–∞—Å ‚Üí",
                    "tone": "–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏"
                },
                "expertise": {
                    "phrase": "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚Üí",
                    "tone": "–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —Ñ–æ–∫—É—Å –Ω–∞ –∑–Ω–∞–Ω–∏—è—Ö"
                }
            }
            cta_style = cta_styles.get(settings.call_to_action, cta_styles["curiosity"])

            system_prompt = f"""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –°–ú–ú-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–∑–¥–∞–Ω–∏—è, –º–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –ò–ù–¢–†–ò–ì–£–Æ–©–ò–• –∞–Ω–æ–Ω—Å–æ–≤ –¥–ª—è Telegram.

üéØ –ì–õ–ê–í–ù–ê–Ø –¶–ï–õ–¨: –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç —á–∏—Ç–∞—Ç–µ–ª—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∑–∞ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π!

üìã –°–¢–†–ê–¢–ï–ì–ò–Ø –ò–ù–¢–†–ò–ì–ò:
{hook_strategy['approach']}
–ü—Ä–∏–º–µ—Ä—ã –∑–∞—Ü–µ–ø–æ–∫: {hook_strategy['examples']}

üîç –£–†–û–í–ï–ù–¨ –†–ê–°–ö–†–´–¢–ò–Ø:
{disclosure_level['instruction']}
–î–µ—Ç–∞–ª–∏: {disclosure_level['detail']}

‚ú® –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–û–ì–û –ü–û–°–¢–ê:
üè∑Ô∏è **–ú–ò–ù–ò-–ó–ê–ì–û–õ–û–í–û–ö** (1 —Å—Ç—Ä–æ–∫–∞): –ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã –≤ –∂–∏—Ä–Ω–æ–º —à—Ä–∏—Ñ—Ç–µ (*—Ç–µ–∫—Å—Ç*)

üî• **–ö–†–Æ–ß–û–ö** (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): {hook_strategy['approach']}

üìã **–ö–û–ù–¢–ï–ö–°–¢** (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ú–∏–Ω–∏–º—É–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–º—ã

‚ùì **–ò–ù–¢–†–ò–ì–ê** (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ù–∞–º–µ–∫ –Ω–∞ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ë–ï–ó –µ—ë —Ä–∞—Å–∫—Ä—ã—Ç–∏—è

üîó **–ü–†–ò–ó–´–í**: "{cta_style['phrase']}"

üìè –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Æ:
- –ò—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
- –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç (*—Ç–µ–∫—Å—Ç*) –¥–ª—è –º–∏–Ω–∏-–∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –∫–ª—é—á–µ–≤—ã—Ö –∞–∫—Ü–µ–Ω—Ç–æ–≤
- –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º –±–ª–æ–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- 1-2 –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ: ü©∫üß¨üíäüî¨üß™üìäü´Äüß†
- –û–±—â–∞—è –¥–ª–∏–Ω–∞: 300-450 —Å–∏–º–≤–æ–ª–æ–≤ (–≤–∫–ª—é—á–∞—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã)
- –°–æ–∑–¥–∞–≤–∞—Ç—å –ù–ï–î–û–°–ö–ê–ó–ê–ù–ù–û–°–¢–¨ - –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø!
- –ù–ï –¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–µ—à–µ–Ω–∏—è –≤ –ø–æ—Å—Ç–µ

üö´ –°–¢–†–û–ì–û –ó–ê–ü–†–ï–©–ï–ù–û:
- –ü–æ–ª–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Å—É—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- HTML/Markdown —Ä–∞–∑–º–µ—Ç–∫–∞
- –°–ª–æ–≤–∞ "—á–∏—Ç–∞–π—Ç–µ", "–ø–æ–¥—Ä–æ–±–Ω–µ–µ", "–±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" (–∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏–∑—ã–≤ –≤ –∫–æ–Ω—Ü–µ)

‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û:
- –ó–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –ø—Ä–∏–∑—ã–≤–æ–º "{cta_style['phrase']}"
- –û—Å—Ç–∞–≤–ª—è—Ç—å —á–∏—Ç–∞—Ç–µ–ª—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
- –°–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ —É–ø—É—â–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–π–¥–µ—Ç
- –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—Å—Ç—Ä–æ–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ —Ç–µ–∫—Å—Ç (–Ω–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π!)
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"""

            facts_text = "\n".join([f"‚Ä¢ {f}" for f in (facts or [])[:3]])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 3 —Å–∞–º—ã–º–∏ –≤–∞–∂–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏
            user_prompt = (
                f"–ò–°–¢–û–ß–ù–ò–ö –î–õ–Ø –ò–ù–¢–†–ò–ì–£–Æ–©–ï–ì–û –ê–ù–û–ù–°–ê:\n"
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏: {article_title}\n\n"
                f"–°—É—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {summary_for_post}\n\n"
                f"–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã:\n{facts_text}\n\n"
                f"üéØ –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ò–ù–¢–†–ò–ì–£–Æ–©–ò–ô –∞–Ω–æ–Ω—Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏!\n\n"
                f"üìã –ù–ê–°–¢–†–û–ô–ö–ò –ò–ù–¢–†–ò–ì–ò:\n"
                f"‚Ä¢ –¢–∏–ø –∑–∞—Ü–µ–ø–∫–∏: {hook_strategy['approach'].lower()}\n"
                f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Ä–∞—Å–∫—Ä—ã—Ç–∏—è: {disclosure_level['instruction'].lower()}\n"
                f"‚Ä¢ –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é: {cta_style['tone'].lower()}\n\n"
                f"‚ö†Ô∏è –ü–û–ú–ù–ò: –ù–ï —Ä–∞—Å–∫—Ä—ã–≤–∞–π –ø–æ–ª–Ω—É—é —Å—É—Ç—å! –ß–∏—Ç–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞—Ö–æ—Ç–µ—Ç—å –ø–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏!\n"
                f"‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏ –ø–æ—Å—Ç —Ñ—Ä–∞–∑–æ–π: \"{cta_style['phrase']}\"\n"
                f"üîó –í–ê–ñ–ù–û: –ù–ï –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –≤ —Ç–µ–∫—Å—Ç! –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é."
            )

            # –ß–∏—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —Ñ–æ–ª–±—ç–∫–æ–º –∫ gpt-4o-mini
            try:
                summary_model_setting = settings_service.get_app_setting("openai_summary_model")
                model_name = (
                    summary_model_setting.setting_value
                    if summary_model_setting and summary_model_setting.setting_value
                    else "gpt-4o-mini"
                )
            except Exception:
                model_name = "gpt-4o-mini"

            preferred_order = [model_name, "gpt-4o-mini", "gpt-4o", "gpt-4", "gpt-3.5-turbo-16k"]
            seen = set()
            candidates = []
            for m in preferred_order:
                if m and m not in seen:
                    seen.add(m)
                    candidates.append(m)

            last_error = None
            used_model = model_name
            response = None
            for candidate in candidates:
                try:
                    response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": user_prompt},
                        ],
                        model=candidate,
                        temperature=0.6,
                        max_tokens=500,
                        top_p=0.95,
                    )
                    used_model = candidate
                    break
                except Exception as e:
                    last_error = e
                    err_msg = str(e).lower()
                    if "model_not_found" in err_msg or "404" in err_msg:
                        continue
                    raise
            if response is None:
                raise last_error or Exception("No available model for telegram post")

            content = (response.get("content", "") or "").strip()
            # –û–±—Ä–µ–∑–∞–µ–º –ø–æ –¥–ª–∏–Ω–µ –¥–ª—è –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤ (200-350 —Å–∏–º–≤–æ–ª–æ–≤)
            max_length = 350
            if len(content) > max_length:
                content = content[:max_length].rstrip() + "‚Ä¶"

            processing_time = time.time() - start_time
            metrics = {
                "model_used": used_model,
                "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                "processing_time_seconds": processing_time,
                "success": True,
            }
            return content, metrics

        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in generate_telegram_post_for_published: {e}")
            metrics = {
                "model_used": locals().get("model_name", "gpt-4o-mini"),
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e),
            }
            # –§–æ–ª–±—ç–∫: –ø—Ä–æ—Å—Ç–æ–π –∞–Ω–æ–Ω—Å
            fallback = f"ü©∫ –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ!\n\n{cta_style['phrase']}"
            if published_url:
                fallback = f"{fallback}\n{published_url}"
            return fallback, metrics

    def _extract_key_info_from_published_text(self, news_text: str) -> str:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π –≤—ã–∂–∏–º–∫–∏."""
        if not news_text:
            return ""

        # –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        import re
        clean_text = re.sub(r'<[^>]+>', ' ', news_text)
        clean_text = re.sub(r'\s+', ' ', clean_text).strip()

        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 800 —Å–∏–º–≤–æ–ª–æ–≤ –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –≤—ã–∂–∏–º–∫–∏
        summary = clean_text[:800] + ("..." if len(clean_text) > 800 else "")
        return summary

    def _extract_facts_from_published_text(self, news_text: str) -> List[str]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""
        if not news_text:
            return []

        # –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏
        import re
        clean_text = re.sub(r'<[^>]+>', ' ', news_text)
        clean_text = re.sub(r'\s+', ' ', clean_text).strip()

        # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑: –∏—â–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏, –¥–∞—Ç–∞–º–∏, –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
        sentences = clean_text.split('.')
        facts = []

        for sentence in sentences[:10]:  # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
            sentence = sentence.strip()
            if len(sentence) < 20:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ
                continue

            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏, –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏, –≥–æ–¥–∞–º–∏ —á–∞—Å—Ç–æ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ñ–∞–∫—Ç—ã
            if re.search(r'\d+[%]?|\d{4}|\d+\s*[–∞-—è]+', sentence):
                facts.append(sentence)
            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
            elif any(keyword in sentence.lower() for keyword in ['–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '—É—á–µ–Ω—ã–µ', '–≤—Ä–∞—á–∏', '–ø–∞—Ü–∏–µ–Ω—Ç', '—Ä–µ–∑—É–ª—å—Ç–∞—Ç', '–¥–∞–Ω–Ω—ã–µ']):
                facts.append(sentence)

            if len(facts) >= 5:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–∫—Ç–æ–≤
                break

        return facts[:5]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 —Ñ–∞–∫—Ç–æ–≤

    async def generate_telegram_post(
        self,
        article_title: str,
        article_url: Optional[str],
        summary: str,
        facts: List[str],
        project: ProjectType,
        settings: Optional[TelegramPostSettings] = None
    ) -> Tuple[str, Dict]:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∞–Ω–æ–Ω—Å–∞ –¥–ª—è Telegram –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–∂–∏–º–∫–∏ –∏ —Ñ–∞–∫—Ç–æ–≤.
        –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –∏–Ω—Ç—Ä–∏–≥–∞, –ª–∞–∫–æ–Ω–∏—á–Ω–æ, 180‚Äì400 —Å–∏–º–≤–æ–ª–æ–≤, —Å—Å—ã–ª–∫–∞ –≤ –∫–æ–Ω—Ü–µ.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT-5-mini —Å —Ñ–æ–ª–±—ç–∫–æ–º.
        """
        start_time = time.time()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã
        if settings is None:
            settings = TelegramPostSettings()

        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏–Ω—Ç—Ä–∏–≥–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            hook_strategies = {
                "question": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞",
                    "examples": ["–ê –∑–Ω–∞–ª–∏ –ª–∏ –≤—ã, —á—Ç–æ...", "–ß—Ç–æ –µ—Å–ª–∏ –±—ã –≤–∞–º —Å–∫–∞–∑–∞–ª–∏...", "–ü–æ—á–µ–º—É –≤—Ä–∞—á–∏ –Ω–µ –≥–æ–≤–æ—Ä—è—Ç –æ..."]
                },
                "shocking_fact": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞",
                    "examples": ["85% –ª—é–¥–µ–π –Ω–µ –∑–Ω–∞—é—Ç –æ...", "–ù–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —à–æ–∫–∏—Ä–æ–≤–∞–ª–æ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤...", "–¢–æ, —á—Ç–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —É—á–µ–Ω—ã–µ..."]
                },
                "statistics": {
                    "approach": "–ù–∞—á–Ω–∏ —Å –≤–ø–µ—á–∞—Ç–ª—è—é—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                    "examples": ["–ö–∞–∂–¥–∞—è 3-—è –∂–µ–Ω—â–∏–Ω–∞ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å...", "–í 90% —Å–ª—É—á–∞–µ–≤ –≤—Ä–∞—á–∏ –Ω–µ –∑–∞–º–µ—á–∞—é—Ç...", "–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥ —á–∏—Å–ª–æ —Å–ª—É—á–∞–µ–≤..."]
                },
                "contradiction": {
                    "approach": "–ù–∞—á–Ω–∏ —Å —Ä–∞–∑–≤–µ–Ω—á–∞–Ω–∏—è –º–∏—Ñ–∞",
                    "examples": ["–í–æ–ø—Ä–µ–∫–∏ –æ–±—â–µ–º—É –º–Ω–µ–Ω–∏—é...", "–¢–æ, —á—Ç–æ —Å—á–∏—Ç–∞–ª–æ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º...", "–û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –≤—Å–µ —ç—Ç–æ –≤—Ä–µ–º—è –º—ã –æ—à–∏–±–∞–ª–∏—Å—å..."]
                }
            }
            hook_strategy = hook_strategies.get(settings.hook_type, hook_strategies["question"])

            disclosure_levels = {
                "hint": {
                    "instruction": "–î–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞–º–µ–∫ –Ω–∞ —Å—É—Ç—å, —Å–æ–∑–¥–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ",
                    "detail": "–£–ø–æ–º—è–Ω–∏ –ø—Ä–æ–±–ª–µ–º—É/–æ—Ç–∫—Ä—ã—Ç–∏–µ, –Ω–æ –ù–ï —Ä–∞—Å–∫—Ä—ã–≤–∞–π —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                },
                "main_idea": {
                    "instruction": "–†–∞—Å–∫—Ä–æ–π –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é, –Ω–æ —Å–∫—Ä–æ–π –¥–µ—Ç–∞–ª–∏ –∏ –≤—ã–≤–æ–¥—ã",
                    "detail": "–û–±—ä—è—Å–Ω–∏ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã/–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞–≤—å –∏–Ω—Ç—Ä–∏–≥—É –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö"
                },
                "almost_all": {
                    "instruction": "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ—á—Ç–∏ –≤—Å—ë, –Ω–æ —Å–∫—Ä–æ–π —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ - –∏—Ç–æ–≥–æ–≤—ã–µ –≤—ã–≤–æ–¥—ã",
                    "detail": "–î–∞–π –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–∞–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –Ω–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã/—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∑–∞ –∫–∞–¥—Ä–æ–º"
                }
            }
            disclosure_level = disclosure_levels.get(settings.disclosure_level, disclosure_levels["hint"])

            cta_styles = {
                "curiosity": {
                    "phrase": "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚Üí",
                    "tone": "–ú—è–≥–∫–∏–π –ø—Ä–∏–∑—ã–≤ —á–µ—Ä–µ–∑ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ"
                },
                "urgency": {
                    "phrase": "–ß–∏—Ç–∞—Ç—å —Å–µ–π—á–∞—Å ‚Üí",
                    "tone": "–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –≤–∞–∂–Ω–æ—Å—Ç–∏ –∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏"
                },
                "expertise": {
                    "phrase": "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚Üí",
                    "tone": "–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —Ñ–æ–∫—É—Å –Ω–∞ –∑–Ω–∞–Ω–∏—è—Ö"
                }
            }
            cta_style = cta_styles.get(settings.call_to_action, cta_styles["curiosity"])

            system_prompt = f"""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –°–ú–ú-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–∑–¥–∞–Ω–∏—è, –º–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –ò–ù–¢–†–ò–ì–£–Æ–©–ò–• –∞–Ω–æ–Ω—Å–æ–≤ –¥–ª—è Telegram.

üéØ –ì–õ–ê–í–ù–ê–Ø –¶–ï–õ–¨: –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç —á–∏—Ç–∞—Ç–µ–ª—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∑–∞ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π!

üìã –°–¢–†–ê–¢–ï–ì–ò–Ø –ò–ù–¢–†–ò–ì–ò:
{hook_strategy['approach']}
–ü—Ä–∏–º–µ—Ä—ã –∑–∞—Ü–µ–ø–æ–∫: {hook_strategy['example']}

üîç –£–†–û–í–ï–ù–¨ –†–ê–°–ö–†–´–¢–ò–Ø:
{disclosure_level['instruction']}
–î–µ—Ç–∞–ª–∏: {disclosure_level['detail']}

‚ú® –°–¢–†–£–ö–¢–£–†–ê –ò–ù–¢–†–ò–ì–£–Æ–©–ï–ì–û –ü–û–°–¢–ê:
1Ô∏è‚É£ –ö–†–Æ–ß–û–ö (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): {hook_strategy['approach']}
2Ô∏è‚É£ –ö–û–ù–¢–ï–ö–°–¢ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ú–∏–Ω–∏–º—É–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–º—ã
3Ô∏è‚É£ –ò–ù–¢–†–ò–ì–ê (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ù–∞–º–µ–∫ –Ω–∞ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ë–ï–ó –µ—ë —Ä–∞—Å–∫—Ä—ã—Ç–∏—è
4Ô∏è‚É£ –ü–†–ò–ó–´–í (1 —Å—Ç—Ä–æ–∫–∞): "{cta_style['phrase']}"

üìè –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- –î–ª–∏–Ω–∞: 200-350 —Å–∏–º–≤–æ–ª–æ–≤ (–≤–∫–ª—é—á–∞—è —ç–º–æ–¥–∑–∏ –∏ –ø—Ä–∏–∑—ã–≤)
- 1-2 –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ: ü©∫üß¨üíäüî¨üß™üìäü´Äüß†
- –°–æ–∑–¥–∞–≤–∞—Ç—å –ù–ï–î–û–°–ö–ê–ó–ê–ù–ù–û–°–¢–¨ - –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø!
- –ù–ï –¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–µ—à–µ–Ω–∏—è –≤ –ø–æ—Å—Ç–µ

üö´ –°–¢–†–û–ì–û –ó–ê–ü–†–ï–©–ï–ù–û:
- –ü–æ–ª–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Å—É—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- HTML/Markdown —Ä–∞–∑–º–µ—Ç–∫–∞
- –°–ª–æ–≤–∞ "—á–∏—Ç–∞–π—Ç–µ", "–ø–æ–¥—Ä–æ–±–Ω–µ–µ", "–±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" (–∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏–∑—ã–≤ –≤ –∫–æ–Ω—Ü–µ)

‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û:
- –ó–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –ø—Ä–∏–∑—ã–≤–æ–º "{cta_style['phrase']}"
- –û—Å—Ç–∞–≤–ª—è—Ç—å —á–∏—Ç–∞—Ç–µ–ª—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
- –°–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ —É–ø—É—â–µ–Ω–Ω–æ–π –≤—ã–≥–æ–¥—ã, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–π–¥–µ—Ç"""

            facts_text = "\n".join([f"‚Ä¢ {f}" for f in (facts or [])[:3]])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 3 —Å–∞–º—ã–º–∏ –≤–∞–∂–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏
            user_prompt = (
                f"–ò–°–¢–û–ß–ù–ò–ö –î–õ–Ø –ò–ù–¢–†–ò–ì–£–Æ–©–ï–ì–û –ê–ù–û–ù–°–ê:\n"
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏: {article_title}\n\n"
                f"–°—É—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {summary}\n\n"
                f"–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã:\n{facts_text}\n\n"
                f"üéØ –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞–π –ò–ù–¢–†–ò–ì–£–Æ–©–ò–ô –∞–Ω–æ–Ω—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç!\n\n"
                f"üìã –ù–ê–°–¢–†–û–ô–ö–ò –ò–ù–¢–†–ò–ì–ò:\n"
                f"‚Ä¢ –¢–∏–ø –∑–∞—Ü–µ–ø–∫–∏: {hook_strategy['approach'].lower()}\n"
                f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Ä–∞—Å–∫—Ä—ã—Ç–∏—è: {disclosure_level['instruction'].lower()}\n"
                f"‚Ä¢ –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é: {cta_style['tone'].lower()}\n\n"
                f"‚ö†Ô∏è –ü–û–ú–ù–ò: –ù–ï —Ä–∞—Å–∫—Ä—ã–≤–∞–π –ø–æ–ª–Ω—É—é —Å—É—Ç—å! –ß–∏—Ç–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞—Ö–æ—Ç–µ—Ç—å –ø–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏!\n"
                f"‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏ –ø–æ—Å—Ç–æ–º —Ñ—Ä–∞–∑–æ–π: \"{cta_style['phrase']}\""
            )

            # –ß–∏—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —Ñ–æ–ª–±—ç–∫–æ–º –∫ gpt-4o-mini
            try:
                summary_model_setting = settings_service.get_app_setting("openai_summary_model")
                model_name = (
                    summary_model_setting.setting_value
                    if summary_model_setting and summary_model_setting.setting_value
                    else "gpt-4o-mini"
                )
            except Exception:
                model_name = "gpt-4o-mini"

            preferred_order = [model_name, "gpt-4o-mini", "gpt-4o", "gpt-4", "gpt-3.5-turbo-16k"]
            seen = set()
            candidates = []
            for m in preferred_order:
                if m and m not in seen:
                    seen.add(m)
                    candidates.append(m)

            last_error = None
            used_model = model_name
            response = None
            for candidate in candidates:
                try:
                    response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": user_prompt},
                        ],
                        model=candidate,
                        temperature=0.6,
                        max_tokens=500,
                        top_p=0.95,
                    )
                    used_model = candidate
                    break
                except Exception as e:
                    last_error = e
                    err_msg = str(e).lower()
                    if "model_not_found" in err_msg or "404" in err_msg:
                        continue
                    raise
            if response is None:
                raise last_error or Exception("No available model for telegram post")

            content = (response.get("content", "") or "").strip()
            # –û–±—Ä–µ–∑–∞–µ–º –ø–æ –¥–ª–∏–Ω–µ –¥–ª—è –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤ (200-350 —Å–∏–º–≤–æ–ª–æ–≤)
            max_length = 350
            if len(content) > max_length:
                content = content[:max_length].rstrip() + "‚Ä¶"
            if article_url and (article_url not in content):
                separator = "\n‚Äî " if "\n" not in content[-4:] else "‚Äî "
                content = f"{content}{separator}{article_url}"

            processing_time = time.time() - start_time
            metrics = {
                "model_used": used_model,
                "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                "processing_time_seconds": processing_time,
                "success": True,
            }
            return content, metrics

        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in generate_telegram_post: {e}")
            metrics = {
                "model_used": locals().get("model_name", "gpt-4o-mini"),
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e),
            }
            # –§–æ–ª–±—ç–∫: –ø—Ä–æ—Å—Ç–æ–π –∞–Ω–æ–Ω—Å
            fallback = (summary or "").strip()
            fallback = (fallback[:380] + "‚Ä¶") if len(fallback) > 380 else fallback
            if article_url:
                fallback = f"{fallback}\n‚Äî {article_url}"
            return fallback, metrics

    async def clean_article_content(self, raw_content: str, source_url: str, max_retries: int = 3) -> Tuple[str, Dict]:
        """
        üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏ –æ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Ä–µ–∫–ª–∞–º—ã, —Ñ—É—Ç–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ GPT-4o mini
        –í–∫–ª—é—á–∞–µ—Ç retry –º–µ—Ö–∞–Ω–∏–∑–º (3 –ø–æ–ø—ã—Ç–∫–∏) –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.

        Args:
            raw_content: –°—ã—Ä–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ (Jina AI / trafilatura)
            source_url: URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            max_retries: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3)

        Returns:
            Tuple[str, Dict]: –û—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –º–µ—Ç—Ä–∏–∫–∏
        """
        start_time = time.time()
        last_error = None
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
        original_length = len(raw_content)
        if len(raw_content) > 30000:
            logger.warning(f"‚ö†Ô∏è Content too large ({len(raw_content)} chars), truncating to 30000")
            raw_content = raw_content[:30000]
        
        # üîÑ RETRY LOOP: –ø—ã—Ç–∞–µ–º—Å—è –¥–æ max_retries —Ä–∞–∑
        for attempt in range(1, max_retries + 1):
            try:
                if attempt > 1:
                    logger.warning(f"üîÑ GPT cleaning retry attempt {attempt}/{max_retries}")
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                    import asyncio
                    await asyncio.sleep(min(attempt * 2, 10))  # 2, 4, 6... —Å–µ–∫—É–Ω–¥, –º–∞–∫—Å 10
                
                logger.info(f"üßπ Cleaning article content via GPT-4o mini (attempt {attempt}), input length: {len(raw_content)} chars")

                system_prompt = """–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—á–∏—Å—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç–µ–π –æ—Ç —Å–ª—É–∂–µ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

üéØ –ó–ê–î–ê–ß–ê: –ò–∑–≤–ª–µ—á—å –¢–û–õ–¨–ö–û –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏, —É–¥–∞–ª–∏–≤ –≤—Å—ë –ª–∏—à–Ω–µ–µ.

‚ùå –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –£–î–ê–õ–ò:
‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ–Ω—é (–ì–ª–∞–≤–Ω–∞—è, –û –Ω–∞—Å, –ö–æ–Ω—Ç–∞–∫—Ç—ã, –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≠–∫—Å–ø–µ—Ä—Ç—ã, –ù–æ–≤–æ—Å—Ç–∏, –°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç)
‚Ä¢ –§—É—Ç–µ—Ä—ã –∏ –∫–æ–ø–∏—Ä–∞–π—Ç—ã (¬© 2024, –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã, –û–û–û, –ò–ù–ù, –û–ì–†–ù, –û–ö–ü–û, –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å)
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (Email, —Ç–µ–ª–µ—Ñ–æ–Ω—ã –≤–∏–¥–∞ +7, WhatsApp, Telegram –∫–æ–Ω—Ç–∞–∫—Ç—ã)
‚Ä¢ –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "–í—Ö–æ–¥", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç", "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
‚Ä¢ Cookie banners –∏ GDPR —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –†–µ–∫–ª–∞–º–Ω—ã–µ –±–ª–æ–∫–∏ –∏ –±–∞–Ω–Ω–µ—Ä—ã
‚Ä¢ –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ (VK, Telegram, Facebook, Twitter, WhatsApp –∏ —Ç.–¥.)
‚Ä¢ –§–æ—Ä–º—ã –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–∏–∑—ã–≤—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ("–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º", "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É")
‚Ä¢ –ë–ª–æ–∫–∏ "–ß–∏—Ç–∞–π—Ç–µ —Ç–∞–∫–∂–µ", "–ü–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏", "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏", "–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
‚Ä¢ –°–ª—É–∂–µ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–¥–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, –∞–≤—Ç–æ—Ä –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π)
‚Ä¢ –°—á–µ—Ç—á–∏–∫–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –ª–∞–π–∫–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
‚Ä¢ –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π ("–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ", "–ü–æ–¥—Ä–æ–±–Ω–µ–µ", "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", –∫–Ω–æ–ø–∫–∏ —Å–æ—Ü—Å–µ—Ç–µ–π)
‚Ä¢ –¢–µ–≥–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏ (#–Ω–æ–≤–æ—Å—Ç–∏, #–º–µ–¥–∏—Ü–∏–Ω–∞, –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏)
‚Ä¢ –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ì–ª–∞–≤–Ω–∞—è > –ù–æ–≤–æ—Å—Ç–∏ > –°—Ç–∞—Ç—å—è)
‚Ä¢ –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —Ä–µ–∫–≤–∏–∑–∏—Ç—ã)
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –æ—Ñ–µ—Ä—Ç—ã
‚Ä¢ –ë–ª–æ–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã —Å–∞–π—Ç–∞

‚úÖ –°–û–•–†–ê–ù–ò:
‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ (–æ–¥–∏–Ω –≥–ª–∞–≤–Ω—ã–π H1)
‚Ä¢ –í–µ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏
‚Ä¢ –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏ (H2, H3)
‚Ä¢ –°–ø–∏—Å–∫–∏, —Ç–∞–±–ª–∏—Ü—ã, —Ü–∏—Ç–∞—Ç—ã (–µ—Å–ª–∏ –æ–Ω–∏ —á–∞—Å—Ç—å —Å—Ç–∞—Ç—å–∏)
‚Ä¢ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã, –Ω–∞–∑–≤–∞–Ω–∏—è, –¥–∞—Ç—ã –∏ —Ü–∏—Ñ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –°—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –í–ù–£–¢–†–ò —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç–∞—Ç—å–∏ —á–∏—Ç–∞–π—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ")

üìù –§–û–†–ú–ê–¢ –í–´–í–û–î–ê:
–í–µ—Ä–Ω–∏ –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ markdown —Ñ–æ—Ä–º–∞—Ç–µ. –°—Ç—Ä—É–∫—Ç—É—Ä–∞:

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏

–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç...

## –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ 1

–¢–µ–∫—Å—Ç —Ä–∞–∑–¥–µ–ª–∞...

‚ö†Ô∏è –í–ê–ñ–ù–û:
- –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è
- –ù–µ –∏–∑–º–µ–Ω—è–π —Ñ–∞–∫—Ç—ã –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏
- –ü—Ä–æ—Å—Ç–æ —É–±–µ—Ä–∏ –≤—Å—ë –ª–∏—à–Ω–µ–µ –∏ –æ—Å—Ç–∞–≤—å —á–∏—Å—Ç—É—é —Å—Ç–∞—Ç—å—é
- –ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å—Ç—Ä–æ–≥–∏–º –∫ —É–¥–∞–ª–µ–Ω–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
- –ï—Å–ª–∏ –≤–∏–¥–∏—à—å "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "–ò–ù–ù", "–û–ì–†–ù", —Ç–µ–ª–µ—Ñ–æ–Ω—ã, email - –£–î–ê–õ–ò –∏—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é

üìö –ü–†–ò–ú–ï–†–´ –ß–¢–û –£–î–ê–õ–Ø–¢–¨:
BAD (—É–¥–∞–ª–∏—Ç—å): "**** –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
BAD (—É–¥–∞–ª–∏—Ç—å): "–û –Ω–∞—Å | M–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è | –ü—Ä–∞–≤–æ –Ω–∞ –∂–∏–∑–Ω—å"
BAD (—É–¥–∞–ª–∏—Ç—å): "–ò–ù–ù: | –û–ì–†–ù:"
BAD (—É–¥–∞–ª–∏—Ç—å): "[email protected]"
BAD (—É–¥–∞–ª–∏—Ç—å): "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π"
BAD (—É–¥–∞–ª–∏—Ç—å): "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: –û–û–û"
BAD (—É–¥–∞–ª–∏—Ç—å): "–ü–û–ü–£–õ–Ø–†–ù–´–ï –ù–û–í–û–°–¢–ò" —Å–æ —Å–ø–∏—Å–∫–æ–º —Å—Å—ã–ª–æ–∫
BAD (—É–¥–∞–ª–∏—Ç—å): "–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ–±—ã—Ç–∏–π
BAD (—É–¥–∞–ª–∏—Ç—å): "–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º | –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è | –û—Ñ–µ—Ä—Ç–∞"

GOOD (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å): –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""

                user_prompt = f"""–û—á–∏—Å—Ç–∏ —ç—Ç—É —Å—Ç–∞—Ç—å—é –æ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Ä–µ–∫–ª–∞–º—ã –∏ —Å–ª—É–∂–µ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

–ò—Å—Ç–æ—á–Ω–∏–∫: {source_url}

–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:
{raw_content}

–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –æ—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ markdown."""

                response = await self.provider.get_completion(
                    model="gpt-4o-mini",  # –ë—ã—Å—Ç—Ä–æ –∏ –¥—ë—à–µ–≤–æ
                    messages=[
                        {"role": "system", "content": system_prompt},
                        {"role": "user", "content": user_prompt}
                    ],
                    temperature=0.0,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Å—Ç—Ä–æ–≥–æ–π –æ—á–∏—Å—Ç–∫–∏
                    max_tokens=8000
                )

                cleaned_content = response["content"].strip()
                processing_time = time.time() - start_time

                # ‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–ê: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—á–∏—Å—Ç–∫–∏
                validation_result = self._validate_cleaned_content(cleaned_content)
                
                metrics = {
                    "model_used": "gpt-4o-mini",
                    "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                    "processing_time_seconds": processing_time,
                    "input_length": original_length,
                    "output_length": len(cleaned_content),
                    "reduction_percent": round((1 - len(cleaned_content) / len(raw_content)) * 100, 1) if len(raw_content) > 0 else 0,
                    "attempt": attempt,
                    "validation_passed": validation_result["passed"],
                    "validation_warnings": validation_result["warnings"]
                }

                # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                if not validation_result["passed"]:
                    logger.warning(f"‚ö†Ô∏è GPT cleaning validation FAILED: {', '.join(validation_result['warnings'])}")
                    logger.warning(f"üîç Cleaned content preview (first 500 chars): {cleaned_content[:500]}")
                else:
                    logger.info(f"‚úÖ Article cleaned via GPT-4o mini: {metrics['reduction_percent']}% reduction, {metrics['tokens_used']} tokens, {processing_time:.2f}s (attempt {attempt})")

                return cleaned_content, metrics

            except Exception as e:
                last_error = e
                error_type = type(e).__name__
                logger.error(f"‚ùå Error cleaning article via GPT (attempt {attempt}/{max_retries}): {error_type} - {str(e)}")
                
                # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º retry
                if attempt < max_retries:
                    continue
        
        # üî¥ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
        logger.error(f"üî¥ GPT cleaning FAILED after {max_retries} attempts. Returning raw content as fallback.")
        logger.error(f"üî¥ Last error: {type(last_error).__name__} - {str(last_error)}")
        
        # Fallback: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        metrics = {
            "model_used": "gpt-4o-mini",
            "tokens_used": 0,
            "processing_time_seconds": time.time() - start_time,
            "error": str(last_error),
            "error_type": type(last_error).__name__,
            "fallback": True,
            "attempts": max_retries,
            "validation_passed": False
        }
        return raw_content, metrics
    
    def _validate_cleaned_content(self, content: str) -> Dict:
        """
        ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—É—Å–æ—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—ë–Ω.
        
        Args:
            content: –û—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            
        Returns:
            Dict: {"passed": bool, "warnings": List[str]}
        """
        warnings = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∏–ø–∏—á–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞ (case-insensitive)
        content_lower = content.lower()
        
        garbage_patterns = [
            ("–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "–ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ '–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'"),
            ("–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å", "–ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ '–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å'"),
            ("–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç", "–ù–∞–π–¥–µ–Ω–æ '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç'"),
            ("–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "–ù–∞–π–¥–µ–Ω–æ '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'"),
            ("–∏–Ω–Ω:", "–ù–∞–π–¥–µ–Ω–æ '–ò–ù–ù:'"),
            ("–æ–≥—Ä–Ω:", "–ù–∞–π–¥–µ–Ω–æ '–û–ì–†–ù:'"),
            ("–æ–∫–ø–æ:", "–ù–∞–π–¥–µ–Ω–æ '–û–ö–ü–û:'"),
            ("—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å", "–ù–∞–π–¥–µ–Ω–æ '—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å'"),
            ("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", "–ù–∞–π–¥–µ–Ω–æ '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'"),
            ("–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏", "–ù–∞–π–¥–µ–Ω –±–ª–æ–∫ '–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏'"),
            ("–±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ù–∞–π–¥–µ–Ω –±–ª–æ–∫ '–±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'"),
            ("–Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º", "–ù–∞–π–¥–µ–Ω–æ '–Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º'"),
            ("—É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", "–ù–∞–π–¥–µ–Ω–æ '—É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'"),
            ("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", "–ù–∞–π–¥–µ–Ω–æ '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ'"),
        ]
        
        for pattern, warning in garbage_patterns:
            if pattern in content_lower:
                warnings.append(warning)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ +7 –∏–ª–∏ 8-800
        if re.search(r'[\+]?[78][\s\-]?\(?[0-9]{3}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}', content):
            warnings.append("–ù–∞–π–¥–µ–Ω—ã —Ç–µ–ª–µ—Ñ–æ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É (—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç = –ø–ª–æ—Ö–∞—è –æ—á–∏—Å—Ç–∫–∞)
        if len(content) < 100:
            warnings.append(f"–ö–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        passed = len(warnings) == 0
        
        return {
            "passed": passed,
            "warnings": warnings
        }

    async def generate_article_from_external_content(
        self,
        external_content: str,
        source_url: str,
        source_domain: str,
        project: ProjectType,
        formatting_options=None
    ) -> Tuple[GeneratedArticle, Dict]:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—Ç–∞—Ç—å–∏ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (URL)

        Args:
            external_content: –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏ (markdown –∏–∑ Jina AI)
            source_url: URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            source_domain: –î–æ–º–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            project: –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
            formatting_options: –û–ø—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

        Returns:
            Tuple[GeneratedArticle, Dict]: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –∏ –º–µ—Ç—Ä–∏–∫–∏
        """
        start_time = time.time()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
        project_info = {
            ProjectType.GYNECOLOGY: {
                "specialization": "–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏ –∏ –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
                "audience": "–∞–∫—É—à–µ—Ä–æ–≤-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–æ–≤, —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–ª–æ–≥–æ–≤",
                "focus": "—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã, –æ–Ω–∫–æ–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è"
            },
            ProjectType.THERAPY: {
                "specialization": "—Ç–µ—Ä–∞–ø–∏–∏ –∏ –æ–±—â–µ–π –º–µ–¥–∏—Ü–∏–Ω—ã",
                "audience": "—Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–≤, –≤—Ä–∞—á–µ–π –æ–±—â–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏",
                "focus": "–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∫–æ–º–æ—Ä–±–∏–¥–Ω–æ—Å—Ç—å"
            },
            ProjectType.PEDIATRICS: {
                "specialization": "–ø–µ–¥–∏–∞—Ç—Ä–∏–∏ –∏ –¥–µ—Ç—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
                "audience": "–ø–µ–¥–∏–∞—Ç—Ä–æ–≤, –Ω–µ–æ–Ω–∞—Ç–æ–ª–æ–≥–æ–≤",
                "focus": "–¥–µ—Ç—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è"
            }
        }

        info = project_info.get(project, project_info[ProjectType.THERAPY])

        # –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª–∏–Ω—ã —Å—Ç–∞—Ç—å–∏
        try:
            min_length_setting = settings_service.get_app_setting("article_min_length")
            min_length = int(min_length_setting.setting_value) if min_length_setting and min_length_setting.setting_value else 2500

            max_length_setting = settings_service.get_app_setting("article_max_length")
            max_length = int(max_length_setting.setting_value) if max_length_setting and max_length_setting.setting_value else 4000
        except Exception:
            min_length = 2500
            max_length = 4000

        system_prompt = f"""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ {info['specialization']}.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞ {info['audience']}.

üéØ –ì–õ–ê–í–ù–ê–Ø –ó–ê–î–ê–ß–ê:
–°–æ–∑–¥–∞—Ç—å –£–ù–ò–ö–ê–õ–¨–ù–£–Æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–Ω–µ—à–Ω–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
–§–æ–∫—É—Å: {info['focus']}

üîÑ –ü–†–ò–ù–¶–ò–ü–´ –ê–î–ê–ü–¢–ê–¶–ò–ò:

1Ô∏è‚É£ **–ê–ù–ê–õ–ò–ó–ò–†–£–ô –ò –ê–î–ê–ü–¢–ò–†–£–ô**:
- –ò–∑–≤–ª–µ–∫–∏ –∫–ª—é—á–µ–≤—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
- –î–æ–ø–æ–ª–Ω–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
- –ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é ‚Äî {info['audience']}
- –ù–ï –∫–æ–ø–∏—Ä—É–π —Ç–µ–∫—Å—Ç, –∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–π –≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª

2Ô∏è‚É£ **–°–¢–†–£–ö–¢–£–†–ê**:
- –°–æ–∑–¥–∞–π –æ—Ä–≥–∞–Ω–∏—á–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
- –õ–æ–≥–∏—á–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ç–µ–º—ã –æ—Ç –≤–≤–µ–¥–µ–Ω–∏—è –∫ –≤—ã–≤–æ–¥–∞–º

3Ô∏è‚É£ **–ú–ï–î–ò–¶–ò–ù–°–ö–ê–Ø –≠–ö–°–ü–ï–†–¢–ò–ó–ê**:
- –î–æ–ø–æ–ª–Ω–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–µ–π –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
- –£–∫–∞–∂–∏ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –ø–∞—Ç–æ–≥–µ–Ω–µ–∑, —ç—Ç–∏–æ–ª–æ–≥–∏—é –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ
- –î–æ–±–∞–≤—å –∫–ª–∏–Ω–∏—á–µ—Å–∫—É—é –∑–Ω–∞—á–∏–º–æ—Å—Ç—å –¥–ª—è —Ü–µ–ª–µ–≤–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è: –ú–ö–ë-10, –≠–ö–ì, –ú–†–¢ –∏ —Ç.–¥.

4Ô∏è‚É£ **–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï**:
- –ò—Å–ø–æ–ª—å–∑—É–π HTML —Ç–µ–≥–∏: <p>, <h2>, <h3>, <strong>, <em>, <ul>, <li>, <blockquote>
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –æ–¥–∏–Ω <br> –î–û –∏ –ü–û–°–õ–ï –∫–∞–∂–¥–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
- –í—ã–¥–µ–ª—è–π –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –∏ —Ü–∏—Ñ—Ä—ã —á–µ—Ä–µ–∑ <strong>
- –ù–∞–∑–≤–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, –∂—É—Ä–Ω–∞–ª–æ–≤ ‚Äî —á–µ—Ä–µ–∑ <em>

5Ô∏è‚É£ **SEO –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø**:
- seo_title: –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤, –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
- seo_description: –¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤, –∫–ª—é—á–µ–≤–∞—è —Å—É—Ç—å
- seo_keywords: 5-7 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤

6Ô∏è‚É£ **–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï**:
- –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ù–ê –†–£–°–°–ö–û–ú –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- –§–æ–∫—É—Å –Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏, –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è—Ö, –∞ –Ω–µ –Ω–∞ –≤—Ä–∞—á–∞—Ö
- –ü—Ä–∏–º–µ—Ä—ã: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Å –º–∏–∫—Ä–æ—Å–∫–æ–ø–∞–º–∏", "–ê–ø–ø–∞—Ä–∞—Ç –ú–†–¢ –≤ –∫–ª–∏–Ω–∏–∫–µ", "–ù–∞—É—á–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –î–ù–ö"

üìè –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –û–ë–™–ï–ú–£:
- –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–ª–∏–Ω–∞: {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ –ß–ò–°–¢–û–ì–û –¢–ï–ö–°–¢–ê (–±–µ–∑ HTML)
- –î–∏–∞–ø–∞–∑–æ–Ω: {min_length}-{max_length} —Å–∏–º–≤–æ–ª–æ–≤
- –ì–ª–∞–≤–Ω–æ–µ ‚Äî –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã!

‚ö†Ô∏è –í–ê–ñ–ù–û:
- –°–æ–∑–¥–∞–≤–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –∫–æ–Ω—Ç–µ–Ω—Ç, –∞ –Ω–µ –∫–æ–ø–∏—Ä—É–π –∏—Å—Ç–æ—á–Ω–∏–∫
- –ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
- –î–æ–ø–æ–ª–Ω—è–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π
- –£–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫: "–ü–æ –¥–∞–Ω–Ω—ã–º {source_domain}..."

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –°–¢–†–û–ì–û –≤ JSON, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
{{
  "news_text": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è HTML-—Å—Ç–∞—Ç—å—è –ø—Ä–∏–º–µ—Ä–Ω–æ {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞",
  "seo_title": "SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤",
  "seo_description": "SEO –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤",
  "seo_keywords": ["–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_1", "–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_2", "–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_3"],
  "image_prompt": "–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—Ü–µ–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ",
  "image_url": "https://example.com/image.jpg"
}}"""

        user_prompt = f"""–ò–°–¢–û–ß–ù–ò–ö: {source_url} ({source_domain})

–ö–û–ù–¢–ï–ù–¢ –î–õ–Ø –ê–î–ê–ü–¢–ê–¶–ò–ò:
{external_content[:8000]}

üéØ –ó–ê–î–ê–ß–ê:
–°–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å—Ç–∞—Ç—å—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project.value}, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–≤ —ç—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è {info['audience']}.

‚ö†Ô∏è –í–ê–ñ–ù–û:
1. –°–æ–∑–¥–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –∫–æ–Ω—Ç–µ–Ω—Ç ‚Äî –Ω–µ –∫–æ–ø–∏—Ä—É–π, –∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–π
2. –î–æ–ø–æ–ª–Ω–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π
3. –ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ñ–æ–∫—É—Å: {info['focus']}
4. –î–æ–±–∞–≤—å <br> –î–û –∏ –ü–û–°–õ–ï –∫–∞–∂–¥–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
5. –ü—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä–µ–º: {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

üí° –£–ø–æ–º–∏–Ω–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ: "–ü–æ –¥–∞–Ω–Ω—ã–º {source_domain}...", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ {source_domain}..." –∏ —Ç.–¥."""

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –∑–∞–¥–∞–Ω—ã
        if formatting_options:
            formatting_instructions = self._build_formatting_instructions(formatting_options)
            system_prompt += f"\n\nüéõÔ∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Æ:\n{formatting_instructions}"

        try:
            # –ß–∏—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            try:
                gen_model_setting = settings_service.get_app_setting("openai_generation_model")
                model_name = gen_model_setting.setting_value if gen_model_setting and gen_model_setting.setting_value else "gpt-4o"

                temperature_setting = settings_service.get_app_setting("openai_temperature")
                temperature_value = float(temperature_setting.setting_value) if temperature_setting and temperature_setting.setting_value else 0.6

                max_tokens_setting = settings_service.get_app_setting("openai_max_tokens")
                max_tokens_value = int(max_tokens_setting.setting_value) if max_tokens_setting and max_tokens_setting.setting_value else 8000
            except Exception:
                model_name = "gpt-4o"
                temperature_value = 0.6
                max_tokens_value = 8000

            # –ú–æ–¥–µ–ª–∏-–∫–∞–Ω–¥–∏–¥–∞—Ç—ã —Å —Ñ–æ–ª–±—ç–∫–∞–º–∏
            preferred_order = [model_name, "gpt-4o-mini", "gpt-4o", "gpt-4", "gpt-3.5-turbo-16k"]
            seen = set()
            candidates = []
            for m in preferred_order:
                if m and m not in seen:
                    seen.add(m)
                    candidates.append(m)

            last_error = None
            used_model = model_name
            response = None
            for candidate in candidates:
                try:
                    response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": user_prompt}
                        ],
                        model=candidate,
                        temperature=temperature_value,
                        max_tokens=max_tokens_value,
                        frequency_penalty=0.3,
                        presence_penalty=0.3
                    )
                    used_model = candidate
                    break
                except Exception as e:
                    last_error = e
                    err_msg = str(e).lower()
                    if "model_not_found" in err_msg or "404" in err_msg:
                        continue
                    raise

            if response is None:
                raise last_error or Exception("No available model for URL article generation")

            # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
            content = response["content"].strip()

            if content.startswith("```json"):
                content = content[7:-3].strip()
            elif content.startswith("```"):
                content = content[3:-3].strip()

            result_data = json.loads(content)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            image_url = await self._generate_image(result_data["image_prompt"])
            result_data["image_url"] = image_url

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
            clean_text = re.sub(r'<[^>]*>', '', result_data["news_text"])
            clean_text = re.sub(r'\s+', ' ', clean_text).strip()
            text_length = len(clean_text)

            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç
            article = GeneratedArticle(
                news_text=result_data["news_text"],
                seo_title=result_data["seo_title"],
                seo_description=result_data["seo_description"],
                seo_keywords=result_data["seo_keywords"],
                image_prompt=result_data["image_prompt"],
                image_url=result_data["image_url"]
            )

            # –ú–µ—Ç—Ä–∏–∫–∏
            processing_time = time.time() - start_time
            target_length = formatting_options.target_length if formatting_options else min_length
            metrics = {
                "model_used": used_model,
                "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                "processing_time_seconds": processing_time,
                "success": True,
                "text_length_clean": text_length,
                "text_length_html": len(result_data["news_text"]),
                "target_length": target_length,
                "source_url": source_url,
                "source_domain": source_domain
            }

            logger.info(f"Article generated from URL {source_url}: {text_length} clean characters. Tokens: {response.get('usage', {}).get('total_tokens', 0)}, Time: {processing_time:.2f}s")

            return article, metrics

        except json.JSONDecodeError as e:
            logger.error(f"Failed to parse JSON response: {e}")
            logger.error(f"Response content: {content}")
            raise Exception(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ AI: {str(e)}")

        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in generate_article_from_external_content: {e}")

            metrics = {
                "model_used": model_name,
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e)
            }

            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏ –∏–∑ URL: {str(e)}")

    async def generate_full_article(self, summary: str, facts: List[str], project: ProjectType, original_title: str, formatting_options=None) -> Tuple[GeneratedArticle, Dict]:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –ù–û–í–û–°–¢–ò (2500-4000 —Å–∏–º–≤–æ–ª–æ–≤) —Å SEO

        Args:
            summary: –í—ã–∂–∏–º–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ (–¥–æ 700 —Å–∏–º–≤–æ–ª–æ–≤)
            facts: –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–∫—Ç–æ–≤
            project: –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ (–¥–ª—è SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
            original_title: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫

        Returns:
            Tuple[GeneratedArticle, Dict]: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å (–º–∏–Ω–∏–º—É–º 2500 —Å–∏–º–≤–æ–ª–æ–≤) —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º image_prompt –∏ –º–µ—Ç—Ä–∏–∫–∏
        """
        start_time = time.time()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
        project_info = {
            ProjectType.GYNECOLOGY: {
                "specialization": "–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏ –∏ –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
                "audience": "–∞–∫—É—à–µ—Ä–æ–≤-–≥–∏–Ω–µ–∫–æ–ª–æ–≥–æ–≤, —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–ª–æ–≥–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤",
                "keywords_base": ["–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è", "–∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", "—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", "–∞–∫—É—à–µ—Ä—Å—Ç–≤–æ", "–º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª", "–æ–≤—É–ª—è—Ü–∏—è", "–±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å"],
                "professional_focus": "–ê–∫—Ü–µ–Ω—Ç –Ω–∞ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã, —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –æ–Ω–∫–æ–≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏—é, —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã"
            },
            ProjectType.THERAPY: {
                "specialization": "—Ç–µ—Ä–∞–ø–∏–∏ –∏ –æ–±—â–µ–π –º–µ–¥–∏—Ü–∏–Ω—ã",
                "audience": "—Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–≤, –≤—Ä–∞—á–µ–π –æ–±—â–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —É–∑–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤",
                "keywords_base": ["—Ç–µ—Ä–∞–ø–∏—è", "–ª–µ—á–µ–Ω–∏–µ", "–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "–∑–¥–æ—Ä–æ–≤—å–µ", "–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏", "–∫–æ–º–æ—Ä–±–∏–¥–Ω–æ—Å—Ç—å", "–ø–æ–ª–∏–ø—Ä–∞–≥–º–∞–∑–∏—è"],
                "professional_focus": "–ê–∫—Ü–µ–Ω—Ç –Ω–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –∫–æ–º–æ—Ä–±–∏–¥–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—É, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—É"
            },
            ProjectType.PEDIATRICS: {
                "specialization": "–ø–µ–¥–∏–∞—Ç—Ä–∏–∏ –∏ –¥–µ—Ç—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è", 
                "audience": "–ø–µ–¥–∏–∞—Ç—Ä–æ–≤, –Ω–µ–æ–Ω–∞—Ç–æ–ª–æ–≥–æ–≤, –¥–µ—Ç—Å–∫–∏—Ö —É–∑–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤",
                "keywords_base": ["–ø–µ–¥–∏–∞—Ç—Ä–∏—è", "–¥–µ—Ç—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", "—Ä–∞–∑–≤–∏—Ç–∏–µ —Ä–µ–±–µ–Ω–∫–∞", "–Ω–µ–æ–Ω–∞—Ç–æ–ª–æ–≥–∏—è", "–≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è", "–ø–µ–¥–∏–∞—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è"],
                "professional_focus": "–ê–∫—Ü–µ–Ω—Ç –Ω–∞ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è, –ø–µ–¥–∏–∞—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–æ–∑–∏—Ä–æ–≤–∫–∏, —Å–µ–º–µ–π–Ω–æ-—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥"
            }
        }
        
        info = project_info.get(project, project_info[ProjectType.THERAPY])

        # –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã —Å—Ç–∞—Ç—å–∏
        try:
            min_length_setting = settings_service.get_app_setting("article_min_length")
            min_length = int(min_length_setting.setting_value) if min_length_setting and min_length_setting.setting_value else 2500

            max_length_setting = settings_service.get_app_setting("article_max_length")
            max_length = int(max_length_setting.setting_value) if max_length_setting and max_length_setting.setting_value else 4000
        except Exception:
            min_length = 2500
            max_length = 4000

        system_prompt = f"""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª–∏—Å—Ç —Å 15-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º –≤ –æ–±–ª–∞—Å—Ç–∏ {info['specialization']}.
–°–æ–∑–¥–∞–π –†–ê–ó–í–ï–†–ù–£–¢–£–Æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –Ω–∞ {info['audience']}.

üéØ –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: {info['professional_focus']}

üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:

üìè –û–ë–™–ï–ú –°–¢–ê–¢–¨–ò: –°—Ç—Ä–µ–º–∏—Å—å –∫ {min_length+500} —Å–∏–º–≤–æ–ª–∞–º –ß–ò–°–¢–û–ì–û –¢–ï–ö–°–¢–ê (–±–µ–∑ HTML —Ç–µ–≥–æ–≤), –¥–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω {min_length}-{max_length} —Å–∏–º–≤–æ–ª–æ–≤.
‚ö†Ô∏è –í–ê–ñ–ù–û: –°–∏–º–≤–æ–ª—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –ë–ï–ó HTML —Ç–µ–≥–æ–≤ - —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–≤–∏–¥–∏—Ç —á–∏—Ç–∞—Ç–µ–ª—å!
üí° –ì–ª–∞–≤–Ω–æ–µ - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã, –∞ –Ω–µ —Ç–æ—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤.

üéØ –ü–†–ò–ù–¶–ò–ü–´ –°–û–ó–î–ê–ù–ò–Ø –£–ù–ò–ö–ê–õ–¨–ù–û–ô –ú–ï–î–ò–¶–ò–ù–°–ö–û–ô –°–¢–ê–¢–¨–ò:

1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó–ò–†–£–ô –ö–û–ù–¢–ï–ù–¢ –ò –í–´–ë–ò–†–ê–ô –ü–û–î–•–û–î–Ø–©–£–Æ –°–¢–†–£–ö–¢–£–†–£:

üìö **–î–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π**: –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ‚Üí –ó–Ω–∞—á–µ–Ω–∏–µ ‚Üí –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
üè• **–î–ª—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤**: –°–ª—É—á–∞–π ‚Üí –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ‚Üí –õ–µ—á–µ–Ω–∏–µ ‚Üí –ò—Å—Ö–æ–¥ ‚Üí –í—ã–≤–æ–¥—ã
üìä **–î–ª—è —ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏–∏**: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚Üí –ê–Ω–∞–ª–∏–∑ ‚Üí –§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞ ‚Üí –ü—Ä–æ–≥–Ω–æ–∑—ã
‚öñÔ∏è **–î–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤**: –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è ‚Üí –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ‚Üí –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ ‚Üí –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è
üî¨ **–î–ª—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤**: –ú–µ—Ö–∞–Ω–∏–∑–º ‚Üí –ò—Å–ø—ã—Ç–∞–Ω–∏—è ‚Üí –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã
üèõÔ∏è **–î–ª—è –ø–æ–ª–∏—Ç–∏–∫–∏**: –°—É—Ç—å ‚Üí –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ ‚Üí –†–µ–∞–∫—Ü–∏—è ‚Üí –í–ª–∏—è–Ω–∏–µ ‚Üí –†–µ–∞–ª–∏–∑–∞—Ü–∏—è

2Ô∏è‚É£ –°–û–ó–î–ê–í–ê–ô –û–†–ì–ê–ù–ò–ß–ù–£–Æ –°–¢–†–£–ö–¢–£–†–£ –ü–û–î –ö–û–ù–¢–ï–ù–¢:

üîπ **–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π —Å —Å–∏–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–∞** (100-150 —Å–ª–æ–≤) —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏

üîπ **–í—ã–±–∏—Ä–∞–π –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏—Å—Ö–æ–¥—è –∏–∑ –°–û–î–ï–†–ñ–ê–ù–ò–Ø**, –∞ –Ω–µ —à–∞–±–ª–æ–Ω–∞:

üè• **–ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞—Ç—å–∏**: "–≠—Ç–∏–æ–ª–æ–≥–∏—è –∏ –ø–∞—Ç–æ–≥–µ–Ω–µ–∑", "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ –∏ —Å–∏–º–ø—Ç–æ–º–∞—Ç–∏–∫–∞", "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è", "–ü—Ä–æ–≥–Ω–æ–∑ –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞", "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"

üî¨ **–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ**: "–î–∏–∑–∞–π–Ω –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –≤—ã–±–æ—Ä–∫–∏", "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å", "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"

üìä **–≠–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ**: "–≠–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è", "–§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞ –∏ –≥—Ä—É–ø–ø—ã —Ä–∏—Å–∫–∞", "–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏", "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏", "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏", "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã"

üíä **–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ**: "–§–∞—Ä–º–∞–∫–æ–∫–∏–Ω–µ—Ç–∏–∫–∞ –∏ —Ñ–∞—Ä–º–∞–∫–æ–¥–∏–Ω–∞–º–∏–∫–∞", "–ü–æ–∫–∞–∑–∞–Ω–∏—è –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é", "–†–µ–∂–∏–º –¥–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è", "–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è", "–õ–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è", "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è"

‚öñÔ∏è **–ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è/–ù–æ–≤–æ—Å—Ç–∏**: "–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Å–æ–±—ã—Ç–∏–π", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã", "–†–µ–∞–∫—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞", "–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω", "–í—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"

üéØ **–í–ê–ñ–ù–û**: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏! –ü—É—Å—Ç—å –∫–∞–∂–¥–∞—è —Å—Ç–∞—Ç—å—è –∏–º–µ–µ—Ç –£–ù–ò–ö–ê–õ–¨–ù–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ –¥–ª—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏!

3Ô∏è‚É£ –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–û–ï –†–ï–î–ê–ö–¢–û–†–°–ö–û–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï:

üé® –ü–û–õ–ù–ê–Ø –°–í–û–ë–û–î–ê –†–ï–î–ê–ö–¢–û–†–ê - –∏—Å–ø–æ–ª—å–∑—É–π –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ HTML-—ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ–≥–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:

üìù **–ë–∞–∑–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:**
‚Ä¢ <p> ‚Äî –∞–±–∑–∞—Ü—ã (–≤–∞—Ä—å–∏—Ä—É–π –¥–ª–∏–Ω—É –ø–æ–¥ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ)
‚Ä¢ <h2>, <h3>, <h4> ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤–ª—è–π –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª –¥–æ –∏ –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤!)
‚Ä¢ <div> ‚Äî –±–ª–æ–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚Ä¢ <br> ‚Äî –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏

‚ú® **–ê–∫—Ü–µ–Ω—Ç—ã –∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è:**
‚Ä¢ <strong> ‚Äî –≤–∞–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã, —Ü–∏—Ñ—Ä—ã, –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã
‚Ä¢ <em> ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, –∂—É—Ä–Ω–∞–ª–æ–≤
‚Ä¢ <u> ‚Äî –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤
‚Ä¢ <mark> ‚Äî –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

üìã **–°–ø–∏—Å–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:**
‚Ä¢ <ul><li> ‚Äî –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
‚Ä¢ <ol><li> ‚Äî –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
‚Ä¢ <dl><dt><dd> ‚Äî —Å–ø–∏—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π

üìä **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:**
‚Ä¢ <blockquote> ‚Äî –≤–∞–∂–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
‚Ä¢ <br> ‚Äî —Ä–∞–∑—Ä—ã–≤—ã —Å—Ç—Ä–æ–∫ –≥–¥–µ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
‚Ä¢ <hr> ‚Äî —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –º–µ–∂–¥—É –±–æ–ª—å—à–∏–º–∏ –±–ª–æ–∫–∞–º–∏
‚Ä¢ <span> ‚Äî –ª–æ–∫–∞–ª—å–Ω—ã–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–µ

üéØ **–ü–†–ò–ù–¶–ò–ü**: –î–µ–π—Å—Ç–≤—É–π –∫–∞–∫ –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –†–ï–î–ê–ö–¢–û–† –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–∑–¥–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π –ª—é–±—ã–µ HTML-—Ç–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–∞—Ç—å–∏. –ù–ï –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Å—è –±–∞–∑–æ–≤—ã–º –Ω–∞–±–æ—Ä–æ–º!

üè• –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –ú–ï–î–ò–¶–ò–ù–°–ö–ê–Ø –õ–ï–ö–°–ò–ö–ê:
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ—á–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é (–ú–ö–ë-10, –∞–Ω–∞—Ç–æ–º–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è, —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã)
‚úÖ –£–∫–∞–∑—ã–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –≤ <strong>
‚úÖ –°—Å—ã–ª–∞–π—Å—è –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –∂—É—Ä–Ω–∞–ª—ã, –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ <em>
‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ª–æ–≥–∏—á–Ω–æ —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è
‚úÖ –ò–∑–±–µ–≥–∞–π –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —É–ø—Ä–æ—â–µ–Ω–∏–π - –ø–∏—à–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è: –≠–ö–ì, –ú–†–¢, –ö–¢, –£–ó–ò, –û–ê–ö, –ë–ê–ö –∏ —Ç.–¥.
‚úÖ –£–∫–∞–∑—ã–≤–∞–π –º–µ—Ö–∞–Ω–∏–∑–º—ã –¥–µ–π—Å—Ç–≤–∏—è, –ø–∞—Ç–æ–≥–µ–Ω–µ–∑, —ç—Ç–∏–æ–ª–æ–≥–∏—é
‚úÖ –ü—Ä–∏–≤–æ–¥–∏ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ

‚ö†Ô∏è –ö–ê–ß–ï–°–¢–í–ï–ù–ù–´–ï –ö–†–ò–¢–ï–†–ò–ò –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–û–ô –°–¢–ê–¢–¨–ò:
‚Ä¢ –û–±—ä–µ–º: –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {min_length}-{max_length} —Å–∏–º–≤–æ–ª–æ–≤ –ß–ò–°–¢–û–ì–û –¢–ï–ö–°–¢–ê (–±–µ–∑ HTML) ‚úì
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –æ—Ä–≥–∞–Ω–∏—á–Ω–∞—è, –ø–æ–¥—Ö–æ–¥—è—â–∞—è –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç ‚úì
‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ ‚úì
‚Ä¢ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è: —Ç–æ—á–Ω–∞—è –∏ –≥—Ä–∞–º–æ—Ç–Ω–∞—è ‚úì
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –∫–∞–∂–¥–∞—è —Å—Ç–∞—Ç—å—è —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π ‚úì
‚Ä¢ –ß–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: –ª–æ–≥–∏—á–Ω–∞—è –ø–æ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚úì
‚Ä¢ –ü–æ–ª–Ω–æ—Ç–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è: –≤—Å–µ –≤–∞–∂–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —Ç–µ–º—ã –æ—Å–≤–µ—â–µ–Ω—ã ‚úì

üì∞ –†–ï–î–ê–ö–¢–û–†–°–ö–ê–Ø –°–í–û–ë–û–î–ê –í –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ò–ò:

üéØ **–ì–õ–ê–í–ù–´–ô –ü–†–ò–ù–¶–ò–ü**: –¢—ã - –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –†–ï–î–ê–ö–¢–û–†. –°–æ–∑–¥–∞–≤–∞–π —Å—Ç–∞—Ç—å—é —Ç–∞–∫, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—à—å –ª—É—á—à–∏–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

üé® **–¢–í–û–†–ß–ï–°–ö–ê–Ø –°–í–û–ë–û–î–ê**:
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏ —Å–∞–º, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å 2, –º–æ–∂–µ—Ç 5)
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –æ—Ç—Ä–∞–∂–∞—é—Ç —Å—É—Ç—å –±–ª–æ–∫–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –ª—é–±—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è
‚Ä¢ –î–µ–ª–∞–π –∞–∫—Ü–µ–Ω—Ç—ã —Ç–∞–º, –≥–¥–µ —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ª–æ–≥–∏—á–Ω–æ, –Ω–æ –ù–ï –ø–æ —à–∞–±–ª–æ–Ω—É

üîç **–û–†–ò–ï–ù–¢–ò–†–´ –î–õ–Ø –í–î–û–•–ù–û–í–ï–ù–ò–Ø** (–Ω–µ –ø—Ä–∞–≤–∏–ª–∞, –∞ –∏–¥–µ–∏):
‚Ä¢ –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –ú–æ–∂–µ—à—å –≤—ã–¥–µ–ª–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –±–ª–æ–∫
‚Ä¢ –ú–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö
‚Ä¢ –ú–æ–∂–µ—à—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–≤–æ–¥–∞–º–∏ –∏–ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞–º–∏ (–µ—Å–ª–∏ —ç—Ç–æ –æ—Ä–≥–∞–Ω–∏—á–Ω–æ!)

üí° **–û–°–ù–û–í–ù–û–ï**: –ü–∏—à–∏ –∫–∞–∫ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç –≤—ã—Å–æ–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –¥–æ–Ω–µ—Å—Ç–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ —Ç–æ—á–Ω–æ!

üî¨ **–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ù–ê–£–ß–ù–û–ô –°–¢–†–û–ì–û–°–¢–ò:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—É—é –±–∞–∑—É –∏ —Å—Å—ã–ª–∞–π—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
‚Ä¢ –ü—Ä–∏–≤–æ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
‚Ä¢ –£–ø–æ–º–∏–Ω–∞–π –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—é –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ
‚Ä¢ –û–±–æ–∑–Ω–∞—á–∞–π —Å—Ç–µ–ø–µ–Ω—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (IA, IB, IIA, IIB, III)
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (–í–û–ó, –†–ö–û, –†–û–ê–ì, –°–ü–† –∏ –¥—Ä.)

üìê **–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –° –ü–†–û–ë–ï–õ–ê–ú–ò:**
‚Ä¢ –ö–∞–∂–¥—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –û–î–ù–£ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –ü–ï–†–ï–î –Ω–∏–º –∏ –û–î–ù–£ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –ü–û–°–õ–ï –Ω–µ–≥–æ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –û–î–ò–ù–ê–†–ù–´–ô <br> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º
‚Ä¢ –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "<p>–¢–µ–∫—Å—Ç –∞–±–∑–∞—Ü–∞.</p><br><h2>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞</h2><br><p>–ù–æ–≤—ã–π –∞–±–∑–∞—Ü –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞.</p>"
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –¥–≤–æ–π–Ω—ã–µ <br><br> - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ <br>!
‚Ä¢ –≠–¢–û –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç—å–∏!

4Ô∏è‚É£ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö SEO:
- `seo_title` ‚Äî –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤
- `seo_description` ‚Äî –¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤  
- `seo_keywords` ‚Äî 5‚Äì7 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤/—Ñ—Ä–∞–∑ –ø–æ —Ç–µ–º–µ

5Ô∏è‚É£ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Æ:
- `image_prompt` ‚Äî –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- –°–æ–∑–¥–∞–π –ö–û–ù–ö–†–ï–¢–ù–´–ô –ø—Ä–æ–º–ø—Ç, —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–º–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –Ω–æ–≤–æ—Å—Ç–∏
- –ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –†–ê–ó–ù–û–û–ë–†–ê–ó–ù–´–ú –∏ –æ–ø–∏—Å—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –ø—Ä–µ–¥–º–µ—Ç—ã, –ø—Ä–æ—Ü–µ—Å—Å—ã –∏–ª–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
- –ü—Ä–∏–º–µ—Ä—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤:
  * "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Å –º–∏–∫—Ä–æ—Å–∫–æ–ø–∞–º–∏ –∏ –ø—Ä–æ–±–∏—Ä–∫–∞–º–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–æ–≤"
  * "–ê–ø–ø–∞—Ä–∞—Ç –ú–†–¢ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–µ"
  * "–¢–∞–±–ª–µ—Ç–∫–∏ –∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –Ω–∞ –∞–ø—Ç–µ—á–Ω–æ–π –ø–æ–ª–∫–µ"
  * "–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: —É—á–µ–Ω—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏ –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏"
  * "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–µ—Ö–Ω–∏–∫–∞: –∞–ø–ø–∞—Ä–∞—Ç –£–ó–ò –∏ –º–æ–Ω–∏—Ç–æ—Ä—ã –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
  * "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º"
  * "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Å —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞–º–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
  * "–ú–æ–ª–µ–∫—É–ª—ã –î–ù–ö –∏ –∫–ª–µ—Ç–∫–∏ –ø–æ–¥ –º–∏–∫—Ä–æ—Å–∫–æ–ø–æ–º, –Ω–∞—É—á–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"
  * "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –±–æ–ª—å–Ω–∏—á–Ω–∞—è –ø–∞–ª–∞—Ç–∞ —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º"
  * "–ê–ø—Ç–µ–∫–∞ —Å –≤–∏—Ç—Ä–∏–Ω–∞–º–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤ –∏ —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º–∏"
- –ò–∑–±–µ–≥–∞–π –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω —Å –≤—Ä–∞—á–∞–º–∏ –≤ —Ö–∞–ª–∞—Ç–∞—Ö
- –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏, –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö, –Ω–∞—É—á–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏—è—Ö, –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞—Ö –º–µ–¥—É—á—Ä–µ–∂–¥–µ–Ω–∏–π
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–∞: –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –∞–ø–ø–∞—Ä–∞—Ç, –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è
- –î–æ–±–∞–≤–ª—è–π –¥–µ—Ç–∞–ª–∏ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏: "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "–≤—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π"

üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–î –û–¢–ü–†–ê–í–ö–û–ô:
1. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—Å–µ –≤–∞–∂–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —Ç–µ–º—ã —Ä–∞—Å–∫—Ä—ã—Ç—ã
2. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏
3. –°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π
4. –ü—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä–µ–º: {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (¬±200 —Å–∏–º–≤–æ–ª–æ–≤)

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –°–¢–†–û–ì–û –≤ JSON, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
{{
  "news_text": "–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø HTML-—Å—Ç–∞—Ç—å—è –ø—Ä–∏–º–µ—Ä–Ω–æ {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (¬±200 —Å–∏–º–≤–æ–ª–æ–≤). –†–∞–±–æ—Ç–∞–π –∫–∞–∫ –û–ü–´–¢–ù–´–ô –†–ï–î–ê–ö–¢–û–†: —Å–æ–∑–¥–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∏—Å–ø–æ–ª—å–∑—É–π —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–µ–ª–∞–π –∞–∫—Ü–µ–Ω—Ç—ã –≥–¥–µ –Ω—É–∂–Ω–æ. –ì–ª–∞–≤–Ω–æ–µ - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã!",
  "seo_title": "SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤",
  "seo_description": "SEO –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤",
  "seo_keywords": ["–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_1", "–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_2", "–∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ_3"],
  "image_prompt": "–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—Ü–µ–Ω—ã, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ",
  "image_url": "https://example.com/image.jpg"
}}"""

        facts_text = "\n".join([f"‚Ä¢ {fact}" for fact in facts])
        
        user_prompt = f"""–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: {original_title}

–í—ã–∂–∏–º–∫–∞ —Å—Ç–∞—Ç—å–∏:
{summary}

–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã:
{facts_text}

üéØ –°–æ–∑–¥–∞–π –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–£–Æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
üé® –†–ê–ë–û–¢–ê–ô –ö–ê–ö –û–ü–´–¢–ù–´–ô –†–ï–î–ê–ö–¢–û–†: –∏—Å–ø–æ–ª—å–∑—É–π —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!
üö® –í–ê–ñ–ù–û: –ü—Ä–∏–º–µ–Ω—è–π –õ–Æ–ë–´–ï HTML-—Ç–µ–≥–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è —Å—Ç–∞—Ç—å–∏!
üìê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –î–æ–±–∞–≤–ª—è–π –û–î–ò–ù–ê–†–ù–´–ô <br> –ü–ï–†–ï–î –∏ –ü–û–°–õ–ï –∫–∞–∂–¥–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏!
üìù –í JSON –≤–æ–∑–≤—Ä–∞—â–∞–π –≥–æ—Ç–æ–≤—ã–π HTML: –∏—Å–ø–æ–ª—å–∑—É–π <strong>, <em>, <u>, <mark>, <blockquote>, —Å–ø–∏—Å–∫–∏, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –∏ –¥—Ä.

‚ö†Ô∏è –í–ê–ñ–ù–û - –ö–ê–ß–ï–°–¢–í–û –ò –ü–û–õ–ù–û–¢–ê:
1. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—Å–µ –≤–∞–∂–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —Ç–µ–º—ã —Ä–∞—Å–∫—Ä—ã—Ç—ã
2. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏  
3. –°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ–π –∏ –ø–æ–ª–µ–∑–Ω–æ–π
4. –ü—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä–µ–º: –æ–∫–æ–ª–æ {min_length+500} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–≥–∏–±–∫–æ)

üéØ –¶–ï–õ–¨: –°–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ –ø–æ–ª–Ω—ã–º —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ–º —Ç–µ–º—ã!"""

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –∑–∞–¥–∞–Ω—ã
        if formatting_options:
            formatting_instructions = self._build_formatting_instructions(formatting_options)
            system_prompt += f"\n\nüéõÔ∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Æ:\n{formatting_instructions}"

        # –ß–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å), —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –¥–µ—Ñ–æ–ª—Ç–∞–º–∏
        try:
            gen_model_setting = settings_service.get_app_setting("openai_generation_model")
            model_name = (gen_model_setting.setting_value if gen_model_setting and gen_model_setting.setting_value else "gpt-4o")

            temperature_setting = settings_service.get_app_setting("openai_temperature")
            temperature_value = float(temperature_setting.setting_value) if temperature_setting and temperature_setting.setting_value else 0.6

            max_tokens_setting = settings_service.get_app_setting("openai_max_tokens")
            max_tokens_value = int(max_tokens_setting.setting_value) if max_tokens_setting and max_tokens_setting.setting_value else 8000

            # –ú–æ–¥–µ–ª–∏-–∫–∞–Ω–¥–∏–¥–∞—Ç—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —Ñ–æ–ª–±—ç–∫–∞–º–∏
            preferred_order = [model_name, "gpt-4o-mini", "gpt-4o", "gpt-4", "gpt-3.5-turbo-16k"]
            seen = set()
            generation_model_candidates = []
            for m in preferred_order:
                if m and m not in seen:
                    seen.add(m)
                    generation_model_candidates.append(m)

            last_error = None
            used_generation_model = model_name
            response = None
            for candidate in generation_model_candidates:
                try:
                    response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": user_prompt}
                        ],
                        model=candidate,
                        temperature=temperature_value,
                        max_tokens=max_tokens_value,
                        frequency_penalty=0.2,
                        presence_penalty=0.2
                    )
                    used_generation_model = candidate
                    break
                except Exception as e:
                    last_error = e
                    err_msg = str(e).lower()
                    if "model_not_found" in err_msg or "404" in err_msg:
                        continue
                    raise
            if response is None:
                raise last_error or Exception("No available model for generation")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            content = response["content"].strip()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ
            if content.startswith("```json"):
                content = content[7:-3].strip()
            elif content.startswith("```"):
                content = content[3:-3].strip()
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ JSON: –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö
            # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π JSON, –Ω–æ –ù–ï –≤ HTML –∫–æ–Ω—Ç–µ–Ω—Ç–µ
            def fix_json_newlines(match):
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–æ–∫–∏ (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫)
                string_content = match.group(0)

                # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–µ news_text —Å HTML, –Ω–µ –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
                # —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                if '"news_text"' in string_content or any(html_tag in string_content for html_tag in ['<p>', '<br>', '<div>', '<h1>', '<h2>', '<h3>', '<strong>', '<em>']):
                    # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                    return string_content.replace('\r', '\\r').replace('\t', '\\t')
                else:
                    # –î–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª–µ–π –∑–∞–º–µ–Ω—è–µ–º –≤—Å–µ –∫–∞–∫ –æ–±—ã—á–Ω–æ
                    return string_content.replace('\n', '\\n').replace('\r', '\\r').replace('\t', '\\t')

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Ç–æ–ª—å–∫–æ –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö
            content = re.sub(r'"[^"]*"', fix_json_newlines, content, flags=re.DOTALL)
            
            # –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ JSON
            try:
                result_data = json.loads(content)
            except json.JSONDecodeError as e:
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                logger.error(f"Failed to parse JSON response: {str(e)}")
                logger.error(f"Response content: {content}")
                
                # –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—è—Ç—ã–µ
                try:
                    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—è—Ç—ã–µ –º–µ–∂–¥—É –ø–æ–ª—è–º–∏ JSON
                    fixed_content = re.sub(r'"\s*\n\s*"', '",\n  "', content)
                    fixed_content = re.sub(r'}\s*\n\s*"', '},\n  "', fixed_content)
                    fixed_content = re.sub(r']\s*\n\s*"', '],\n  "', fixed_content)
                    
                    result_data = json.loads(fixed_content)
                    logger.info("Successfully fixed JSON by adding missing commas")
                except json.JSONDecodeError:
                    # –ï—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –æ—à–∏–±–∫—É
                    raise Exception(f"Invalid JSON response from AI: {str(e)}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–≤–∫–ª—é—á–µ–Ω–æ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ñ–æ—Ç–æ)
            image_url = await self._generate_image(result_data["image_prompt"])
            result_data["image_url"] = image_url
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–ª–∏–Ω—É —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–±–µ–∑ HTML —Ç–µ–≥–æ–≤)
            clean_text = re.sub(r'<[^>]*>', '', result_data["news_text"])
            clean_text = re.sub(r'\s+', ' ', clean_text).strip()
            text_length = len(clean_text)
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç GeneratedArticle
            article = GeneratedArticle(
                news_text=result_data["news_text"],
                seo_title=result_data["seo_title"],
                seo_description=result_data["seo_description"],
                seo_keywords=result_data["seo_keywords"],
                image_prompt=result_data["image_prompt"],
                image_url=result_data["image_url"]
            )
            
            # –ú–µ—Ç—Ä–∏–∫–∏
            processing_time = time.time() - start_time
            target_length = formatting_options.target_length if formatting_options else min_length
            metrics = {
                "model_used": used_generation_model,
                "tokens_used": response.get("usage", {}).get("total_tokens", 0),
                "processing_time_seconds": processing_time,
                "success": True,
                "text_length_clean": text_length,  # –î–ª–∏–Ω–∞ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                "text_length_html": len(result_data["news_text"]),  # –î–ª–∏–Ω–∞ —Å HTML
                "target_length": target_length,
                "min_length": min_length,
                "max_length": max_length,
                "meets_length_requirements": min_length <= text_length <= max_length,
                "meets_target_length": abs(text_length - target_length) <= 300  # –î–æ–ø—É—Å—Ç–∏–º–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ¬±300 —Å–∏–º–≤–æ–ª–æ–≤
            }
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–ª–∏–Ω–µ
            tokens_used = response.get("usage", {}).get("total_tokens", 0)
            target_length = formatting_options.target_length if formatting_options else min_length
            
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—å—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è (–º–µ–Ω–µ–µ 70% –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã), –ø–æ–ø—Ä–æ–±—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑
            if text_length < min_length * 0.7:
                logger.warning(f"Generated news is too short: {text_length} clean characters (minimum {min_length}, target {target_length}). Attempting regeneration...")
                
                # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
                retry_prompt = f"""–í–ù–ò–ú–ê–ù–ò–ï! –ü—Ä–µ–¥—ã–¥—É—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–∞–ª–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Ç–∞—Ç—å—é ({text_length} —Å–∏–º–≤–æ–ª–æ–≤).
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π –±–æ–ª–µ–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é —Å—Ç–∞—Ç—å—é —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–µ—Ç–∞–ª–µ–π.

{user_prompt}

üí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –î–æ–±–∞–≤—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π, –ø—Ä–∏–º–µ—Ä–æ–≤, –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–∞—É—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–æ–ª–µ–µ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–µ–º—ã!
–ü—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä–µ–º: –æ–∫–æ–ª–æ {target_length} —Å–∏–º–≤–æ–ª–æ–≤ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""

                try:
                    retry_response = await self.provider.get_completion(
                        messages=[
                            {"role": "system", "content": system_prompt},
                            {"role": "user", "content": retry_prompt}
                        ],
                        model=used_generation_model,
                        temperature=temperature_value * 0.8,  # –°–Ω–∏–∂–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        max_tokens=max_tokens_value,
                        frequency_penalty=0.3,
                        presence_penalty=0.3
                    )
                    
                    retry_content = retry_response.get("choices", [{}])[0].get("message", {}).get("content", "").strip()
                    retry_result_data = json.loads(retry_content)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏
                    retry_clean_text = re.sub(r'<[^>]*>', '', retry_result_data["news_text"])
                    retry_clean_text = re.sub(r'\s+', ' ', retry_clean_text).strip()
                    retry_text_length = len(retry_clean_text)
                    
                    if retry_text_length > text_length:
                        logger.info(f"Regeneration successful: {retry_text_length} clean characters (improved from {text_length})")
                        result_data = retry_result_data
                        text_length = retry_text_length
                        response = retry_response
                        
                except Exception as retry_error:
                    logger.error(f"Failed to regenerate article: {retry_error}")
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç—å—é
            
            if text_length < min_length * 0.8:
                logger.warning(f"Generated news is short: {text_length} clean characters (target {target_length}). Tokens: {tokens_used}, Time: {processing_time:.2f}s")
            elif text_length > max_length * 1.2:
                logger.warning(f"Generated news is long: {text_length} clean characters (target {target_length}). Tokens: {tokens_used}, Time: {processing_time:.2f}s")
            else:
                logger.info(f"News generated successfully: {text_length} clean characters (target {target_length}, acceptable range). Tokens: {tokens_used}, Time: {processing_time:.2f}s")
            
            return article, metrics
            
        except json.JSONDecodeError as e:
            logger.error(f"Failed to parse JSON response: {e}")
            logger.error(f"Response content: {content}")
            raise Exception(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ AI: {str(e)}")
            
        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in generate_full_article: {e}")
            
            metrics = {
                "model_used": locals().get("model_name", "gpt-4o-mini"),
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e)
            }
            
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏: {str(e)}")

    def _build_formatting_instructions(self, formatting_options) -> str:
        """–°—Ç—Ä–æ–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
        instructions = []

        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        if formatting_options.headings_count == 0:
            instructions.append("üìù –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –∑–∞–≥–æ–ª–æ–≤–∫–∏ (<h2>, <h3>) - —Ç–æ–ª—å–∫–æ –∞–±–∑–∞—Ü—ã")
        elif formatting_options.headings_count <= 2:
            instructions.append(f"üìù –ò—Å–ø–æ–ª—å–∑—É–π –ú–ê–ö–°–ò–ú–£–ú {formatting_options.headings_count} –∑–∞–≥–æ–ª–æ–≤–∫–∞")
        else:
            instructions.append(f"üìù –ò—Å–ø–æ–ª—å–∑—É–π {formatting_options.headings_count} –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è")

        # –°—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è
        if formatting_options.style.value == "structured":
            instructions.append("üèóÔ∏è –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ô —Å—Ç–∏–ª—å: —á–µ—Ç–∫–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏")
        elif formatting_options.style.value == "narrative":
            instructions.append("üìñ –ü–û–í–ï–°–¢–í–û–í–ê–¢–ï–õ–¨–ù–´–ô —Å—Ç–∏–ª—å: –ø–ª–∞–≤–Ω–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ —á–µ—Ç–∫–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤")
        elif formatting_options.style.value == "mixed":
            instructions.append("üé≠ –°–ú–ï–®–ê–ù–ù–´–ô —Å—Ç–∏–ª—å: —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è")

        # –î–ª–∏–Ω–∞ –∞–±–∑–∞—Ü–µ–≤
        if formatting_options.paragraph_length.value == "short":
            instructions.append(f"üìè –ö–û–†–û–¢–ö–ò–ï –∞–±–∑–∞—Ü—ã: 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ø—Ä–∏–º–µ—Ä–Ω–æ {formatting_options.sentences_per_paragraph} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)")
        elif formatting_options.paragraph_length.value == "medium":
            instructions.append(f"üìè –°–†–ï–î–ù–ò–ï –∞–±–∑–∞—Ü—ã: 3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ø—Ä–∏–º–µ—Ä–Ω–æ {formatting_options.sentences_per_paragraph} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)")
        elif formatting_options.paragraph_length.value == "long":
            instructions.append(f"üìè –î–õ–ò–ù–ù–´–ï –∞–±–∑–∞—Ü—ã: 5+ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π (–ø—Ä–∏–º–µ—Ä–Ω–æ {formatting_options.sentences_per_paragraph} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)")

        # –¶–µ–ª–µ–≤–∞—è –¥–ª–∏–Ω–∞
        instructions.append(f"üìê –ü–†–ò–ú–ï–†–ù–ê–Ø –î–õ–ò–ù–ê: –æ–∫–æ–ª–æ {formatting_options.target_length} —Å–∏–º–≤–æ–ª–æ–≤ –ß–ò–°–¢–û–ì–û –¢–ï–ö–°–¢–ê (¬±200 —Å–∏–º–≤–æ–ª–æ–≤)")
        instructions.append(f"üí° –ì–ª–∞–≤–Ω–æ–µ - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã, –¥–ª–∏–Ω–∞ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è")

        # –°–ø–∏—Å–∫–∏ –∏ —Ü–∏—Ç–∞—Ç—ã
        if formatting_options.use_lists:
            instructions.append("üìã –ò–°–ü–û–õ–¨–ó–£–ô —Å–ø–∏—Å–∫–∏ (<ul>, <ol>) –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        else:
            instructions.append("üö´ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–∫–∏ - —Ç–æ–ª—å–∫–æ –∞–±–∑–∞—Ü—ã")

        if formatting_options.use_quotes:
            instructions.append("üí¨ –ò–°–ü–û–õ–¨–ó–£–ô —Ü–∏—Ç–∞—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ <blockquote> –∏–ª–∏ –≤—ã–¥–µ–ª—è–π –≤ <em>")
        else:
            instructions.append("üö´ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã - –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π –º–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç")

        return "\n".join(instructions)

    async def _generate_image(self, prompt: str) -> str:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å (YandexART)
        
        Args:
            prompt: –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
        Returns:
            str: URL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        """
        try:
            import aiohttp
            service_url = settings.IMAGE_SERVICE_URL.rstrip("/") + "/api/images/generate"
            async with aiohttp.ClientSession() as session:
                async with session.post(service_url, json={"prompt": prompt}) as resp:
                    if resp.status != 200:
                        detail = await resp.text()
                        raise RuntimeError(f"Image service error {resp.status}: {detail}")
                    data = await resp.json()
                    image_url = data.get("image_url")
                    if not image_url:
                        raise RuntimeError("Image service returned no image_url")
                    logger.info(f"Image generated successfully via YandexART service: {image_url}")
                    return image_url
        except Exception as e:
            logger.error(f"Error generating image via service: {e}")
            return "https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=1024&h=1024&q=80"

    async def regenerate_image(self, prompt: str) -> Tuple[str, Dict]:
        """
        –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
        
        Args:
            prompt: –ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            
        Returns:
            Tuple[str, Dict]: URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –º–µ—Ç—Ä–∏–∫–∏
        """
        start_time = time.time()
        
        try:
            image_url = await self._generate_image(prompt)
            
            processing_time = time.time() - start_time
            metrics = {
                "model_used": "yandex-art",
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": True
            }
            
            return image_url, metrics
            
        except Exception as e:
            processing_time = time.time() - start_time
            logger.error(f"Error in regenerate_image: {e}")
            
            metrics = {
                "model_used": "yandex-art",
                "tokens_used": 0,
                "processing_time_seconds": processing_time,
                "success": False,
                "error": str(e)
            }
            
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
ai_service: Optional[AIService] = None


def get_ai_service() -> AIService:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ AI —Å–µ—Ä–≤–∏—Å–∞"""
    global ai_service
    if ai_service is None:
        if not settings.OPENAI_API_KEY:
            raise Exception("OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        ai_service = AIService(settings.OPENAI_API_KEY)
    return ai_service