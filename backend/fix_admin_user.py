#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
backend_path = Path(__file__).parent
sys.path.insert(0, str(backend_path))

from database.connection import engine
from database.models import User, UserRole
from services.auth_service import AuthService
from sqlmodel import Session, select
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_current_admin():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –∞–¥–º–∏–Ω–∞"""
    with Session(engine) as session:
        # –ò—â–µ–º –∞–¥–º–∏–Ω–∞
        stmt = select(User).where(User.username == "admin")
        admin_user = session.exec(stmt).first()
        
        if admin_user:
            logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–∞–π–¥–µ–Ω:")
            logger.info(f"   - –†–æ–ª—å: {admin_user.role}")
            logger.info(f"   - –ü—Ä–æ–µ–∫—Ç: {admin_user.project}")
            logger.info(f"   - ID: {admin_user.id}")
            return admin_user
        else:
            logger.warning("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return None

def fix_admin_role():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    with Session(engine) as session:
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞
        stmt = select(User).where(User.username == "admin")
        admin_user = session.exec(stmt).first()
        
        if not admin_user:
            logger.error("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
            # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
            logger.info("üîß –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
            hashed_password = AuthService.get_password_hash("admin123")
            
            new_admin = User(
                username="admin",
                role=UserRole.ADMIN,  # –≠—Ç–æ —Ç–µ–ø–µ—Ä—å "admin" (lowercase)
                hashed_password=hashed_password
            )
            
            session.add(new_admin)
            session.commit()
            session.refresh(new_admin)
            
            logger.info("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:")
            logger.info(f"   - –õ–æ–≥–∏–Ω: admin")
            logger.info(f"   - –ü–∞—Ä–æ–ª—å: admin123")
            logger.info(f"   - –†–æ–ª—å: {new_admin.role}")
            
            return new_admin
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–æ–ª—å
        if admin_user.role != UserRole.ADMIN:
            logger.info(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–æ–ª—å —Å '{admin_user.role}' –Ω–∞ '{UserRole.ADMIN}'")
            
            admin_user.role = UserRole.ADMIN
            session.add(admin_user)
            session.commit()
            session.refresh(admin_user)
            
            logger.info("‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        else:
            logger.info("‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        
        return admin_user

def check_all_users():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with Session(engine) as session:
        stmt = select(User)
        users = session.exec(stmt).all()
        
        logger.info("üìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:")
        for user in users:
            logger.info(f"   - {user.username} | {user.role} | –ø—Ä–æ–µ–∫—Ç: {user.project}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–¥–º–∏–Ω–∞...")
        check_current_admin()
        
        logger.info("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        admin_user = fix_admin_role()
        
        logger.info("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        check_current_admin()
        
        logger.info("\nüë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        check_all_users()
        
        logger.info("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω—É –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ 3 –≤–∫–ª–∞–¥–∫–∏:")
        logger.info("   1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (/settings)")
        logger.info("   2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞—Å—Ö–æ–¥–æ–≤ (/expenses)") 
        logger.info("   3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã (/system-monitoring)")
        
        logger.info("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        logger.info("   –õ–æ–≥–∏–Ω: admin")
        logger.info("   –ü–∞—Ä–æ–ª—å: admin123")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
